{"version":3,"file":"minimact-babel-plugin.esm.js","sources":["../src/utils/helpers.cjs","../src/types/typeConversion.cjs","../src/analyzers/dependencies.cjs","../src/analyzers/classification.cjs","../src/analyzers/detection.cjs","../src/extractors/eventHandlers.cjs","../src/generators/jsx.cjs","../src/generators/runtimeHelpers.cjs","../src/generators/expressions.cjs","../src/extractors/hooks.cjs","../src/extractors/localVariables.cjs","../src/analyzers/propTypeInference.cjs","../src/processComponent.cjs","../src/generators/renderBody.cjs","../src/generators/component.cjs","../src/generators/csharpFile.cjs","../index-full.cjs"],"sourcesContent":["/**\r\n * Utility Helpers\r\n *\r\n * General utility functions used throughout the plugin.\r\n *\r\n * Functions to move:\r\n * - escapeCSharpString(str) - Escapes special characters for C# strings\r\n * - getComponentName(path) - Extracts component name from function/class declaration\r\n *\r\n * Utilities:\r\n * - escapeCSharpString: Handles \\, \", \\n, \\r, \\t escaping\r\n * - getComponentName: Supports FunctionDeclaration, ArrowFunctionExpression, etc.\r\n *\r\n * Returns processed string or component name\r\n */\r\n\r\n// TODO: Move the following functions here:\r\n// - escapeCSharpString\r\n// - getComponentName\r\n\r\n/**\r\n * Escape C# string\r\n */\r\nfunction escapeCSharpString(str) {\r\n  return str\r\n    .replace(/\\\\/g, '\\\\\\\\')\r\n    .replace(/\"/g, '\\\\\"')\r\n    .replace(/\\n/g, '\\\\n')\r\n    .replace(/\\r/g, '\\\\r')\r\n    .replace(/\\t/g, '\\\\t');\r\n}\r\n\r\n/**\r\n * Get component name from path\r\n */\r\nfunction getComponentName(path) {\r\n  if (path.node.id) {\r\n    return path.node.id.name;\r\n  }\r\n\r\n  if (path.parent.type === 'VariableDeclarator') {\r\n    return path.parent.id.name;\r\n  }\r\n\r\n  if (path.parent.type === 'ExportNamedDeclaration') {\r\n    return path.node.id ? path.node.id.name : null;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  escapeCSharpString,\r\n  getComponentName,\r\n};\r\n","/**\r\n * Type Conversion\r\n */\r\n\r\nconst t = require('@babel/types');\r\n\r\n/**\r\n * Convert TypeScript type annotation to C# type\r\n */\r\nfunction tsTypeToCSharpType(tsType) {\r\n  if (!tsType) return 'dynamic';\r\n\r\n  // TSStringKeyword -> string\r\n  if (t.isTSStringKeyword(tsType)) return 'string';\r\n\r\n  // TSNumberKeyword -> double\r\n  if (t.isTSNumberKeyword(tsType)) return 'double';\r\n\r\n  // TSBooleanKeyword -> bool\r\n  if (t.isTSBooleanKeyword(tsType)) return 'bool';\r\n\r\n  // TSAnyKeyword -> dynamic\r\n  if (t.isTSAnyKeyword(tsType)) return 'dynamic';\r\n\r\n  // TSArrayType -> List<T>\r\n  if (t.isTSArrayType(tsType)) {\r\n    const elementType = tsTypeToCSharpType(tsType.elementType);\r\n    return `List<${elementType}>`;\r\n  }\r\n\r\n  // TSTypeLiteral (object type) -> dynamic\r\n  if (t.isTSTypeLiteral(tsType)) return 'dynamic';\r\n\r\n  // TSTypeReference (custom types, interfaces) -> dynamic\r\n  if (t.isTSTypeReference(tsType)) return 'dynamic';\r\n\r\n  // Default to dynamic for full JSX semantics\r\n  return 'dynamic';\r\n}\r\n\r\n/**\r\n * Infer C# type from initial value\r\n */\r\nfunction inferType(node) {\r\n  if (!node) return 'dynamic';\r\n\r\n  if (t.isStringLiteral(node)) return 'string';\r\n  if (t.isNumericLiteral(node)) return 'int';\r\n  if (t.isBooleanLiteral(node)) return 'bool';\r\n  if (t.isNullLiteral(node)) return 'dynamic';\r\n  if (t.isArrayExpression(node)) return 'List<dynamic>';\r\n  if (t.isObjectExpression(node)) return 'dynamic';\r\n\r\n  return 'dynamic';\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  inferType,\r\n  tsTypeToCSharpType\r\n};\r\n","/**\r\n * Dependency Analyzer\r\n */\r\n\r\nconst t = require('@babel/types');\r\n\r\n/**\r\n * Analyze dependencies in JSX expressions\r\n * Walk the AST manually to find identifier dependencies\r\n */\r\nfunction analyzeDependencies(jsxExpr, component) {\r\n  const deps = new Set();\r\n\r\n  function walk(node) {\r\n    if (!node) return;\r\n\r\n    // Check if this is an identifier that's a state variable\r\n    if (t.isIdentifier(node)) {\r\n      const name = node.name;\r\n      if (component.stateTypes.has(name)) {\r\n        deps.add({\r\n          name: name,\r\n          type: component.stateTypes.get(name) // 'client' or 'server'\r\n        });\r\n      }\r\n    }\r\n\r\n    // Recursively walk the tree\r\n    if (t.isConditionalExpression(node)) {\r\n      walk(node.test);\r\n      walk(node.consequent);\r\n      walk(node.alternate);\r\n    } else if (t.isLogicalExpression(node)) {\r\n      walk(node.left);\r\n      walk(node.right);\r\n    } else if (t.isMemberExpression(node)) {\r\n      walk(node.object);\r\n      walk(node.property);\r\n    } else if (t.isCallExpression(node)) {\r\n      walk(node.callee);\r\n      node.arguments.forEach(walk);\r\n    } else if (t.isBinaryExpression(node)) {\r\n      walk(node.left);\r\n      walk(node.right);\r\n    } else if (t.isUnaryExpression(node)) {\r\n      walk(node.argument);\r\n    } else if (t.isArrowFunctionExpression(node) || t.isFunctionExpression(node)) {\r\n      walk(node.body);\r\n    }\r\n  }\r\n\r\n  walk(jsxExpr);\r\n  return deps;\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  analyzeDependencies\r\n};\r\n","/**\r\n * Node Classification\r\n *\r\n * Classifies JSX nodes as static, dynamic, or hybrid based on dependencies.\r\n *\r\n * Function to move:\r\n * - classifyNode(deps) - Classifies based on dependency set\r\n *\r\n * Classifications:\r\n * - 'static': No dependencies (can be compile-time VNode)\r\n * - 'dynamic': All dependencies are from same zone (state or props)\r\n * - 'hybrid': Mixed dependencies (needs runtime helpers)\r\n *\r\n * Currently returns 'hybrid' for any dependencies as a conservative approach.\r\n *\r\n * Returns classification string\r\n */\r\n\r\n// TODO: Move classifyNode function here\r\n\r\n/**\r\n * Classify a JSX node based on dependencies\r\n */\r\nfunction classifyNode(deps) {\r\n  if (deps.size === 0) {\r\n    return 'static';\r\n  }\r\n\r\n  const types = new Set([...deps].map(d => d.type));\r\n\r\n  if (types.size === 1) {\r\n    return types.has('client') ? 'client' : 'server';\r\n  }\r\n\r\n  return 'hybrid'; // Mixed dependencies\r\n}\r\n\r\nmodule.exports = {\r\n  classifyNode\r\n};\r\n","/**\r\n * Pattern Detection\r\n */\r\n\r\nconst t = require('@babel/types');\r\n\r\n\r\n/**\r\n * Detect if attributes contain spread operators\r\n */\r\nfunction hasSpreadProps(attributes) {\r\n  return attributes.some(attr => t.isJSXSpreadAttribute(attr));\r\n}\r\n\r\n/**\r\n * Detect if children contain dynamic patterns (like .map())\r\n */\r\nfunction hasDynamicChildren(children) {\r\n  return children.some(child => {\r\n    if (!t.isJSXExpressionContainer(child)) return false;\r\n    const expr = child.expression;\r\n\r\n    // Check for .map() calls\r\n    if (t.isCallExpression(expr) &&\r\n        t.isMemberExpression(expr.callee) &&\r\n        t.isIdentifier(expr.callee.property, { name: 'map' })) {\r\n      return true;\r\n    }\r\n\r\n    // Check for array expressions from LINQ/Select\r\n    if (t.isCallExpression(expr) &&\r\n        t.isMemberExpression(expr.callee) &&\r\n        (t.isIdentifier(expr.callee.property, { name: 'Select' }) ||\r\n         t.isIdentifier(expr.callee.property, { name: 'ToArray' }))) {\r\n      return true;\r\n    }\r\n\r\n    // Check for conditionals with JSX: {condition ? <A/> : <B/>}\r\n    if (t.isConditionalExpression(expr)) {\r\n      if (t.isJSXElement(expr.consequent) || t.isJSXFragment(expr.consequent) ||\r\n          t.isJSXElement(expr.alternate) || t.isJSXFragment(expr.alternate)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // Check for logical expressions with JSX: {condition && <Element/>}\r\n    if (t.isLogicalExpression(expr)) {\r\n      if (t.isJSXElement(expr.right) || t.isJSXFragment(expr.right)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\n/**\r\n * Detect if props contain complex expressions\r\n */\r\nfunction hasComplexProps(attributes) {\r\n  return attributes.some(attr => {\r\n    if (!t.isJSXAttribute(attr)) return false;\r\n    const value = attr.value;\r\n\r\n    if (!t.isJSXExpressionContainer(value)) return false;\r\n    const expr = value.expression;\r\n\r\n    // Check for conditional spread: {...(condition && { prop: value })}\r\n    if (t.isConditionalExpression(expr) || t.isLogicalExpression(expr)) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  hasSpreadProps,\r\n  hasDynamicChildren,\r\n  hasComplexProps\r\n};\r\n","/**\r\n * Event Handlers Extractor\r\n */\r\n\r\nconst t = require('@babel/types');\r\n\r\n/**\r\n * Extract event handler name\r\n */\r\nfunction extractEventHandler(value, component) {\r\n  if (t.isStringLiteral(value)) {\r\n    return value.value;\r\n  }\r\n\r\n  if (t.isJSXExpressionContainer(value)) {\r\n    const expr = value.expression;\r\n\r\n    if (t.isArrowFunctionExpression(expr) || t.isFunctionExpression(expr)) {\r\n      // Inline arrow function - extract to named method\r\n      const handlerName = `Handle${component.eventHandlers.length}`;\r\n      component.eventHandlers.push({ name: handlerName, body: expr.body });\r\n      return handlerName;\r\n    }\r\n\r\n    if (t.isIdentifier(expr)) {\r\n      return expr.name;\r\n    }\r\n\r\n    if (t.isCallExpression(expr)) {\r\n      // () => someMethod() - extract\r\n      const handlerName = `Handle${component.eventHandlers.length}`;\r\n      component.eventHandlers.push({ name: handlerName, body: expr });\r\n      return handlerName;\r\n    }\r\n  }\r\n\r\n  return 'UnknownHandler';\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n  extractEventHandler\r\n};\r\n","/**\r\n * JSX Generators\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { escapeCSharpString } = require('../utils/helpers.cjs');\r\nconst { hasSpreadProps, hasDynamicChildren, hasComplexProps } = require('../analyzers/detection.cjs');\r\nconst { extractEventHandler } = require('../extractors/eventHandlers.cjs');\r\n// Note: generateCSharpExpression, generateRuntimeHelperCall and generateJSXExpression will be lazy-loaded to avoid circular dependencies\r\n\r\n/**\r\n * Generate Fragment\r\n */\r\nfunction generateFragment(node, component, indent) {\r\n  const children = generateChildren(node.children, component, indent);\r\n  const childrenArray = children.map(c => c.code).join(', ');\r\n  return `new Fragment(${childrenArray})`;\r\n}\r\n\r\n/**\r\n * Generate C# for JSX element\r\n */\r\nfunction generateJSXElement(node, component, indent) {\r\n  // Lazy load to avoid circular dependencies\r\n  const { generateCSharpExpression: _generateCSharpExpression } = require('./expressions.cjs');\r\n\r\n  const indentStr = '    '.repeat(indent);\r\n\r\n  if (t.isJSXFragment(node)) {\r\n    return generateFragment(node, component, indent);\r\n  }\r\n\r\n  const tagName = node.openingElement.name.name;\r\n  const attributes = node.openingElement.attributes;\r\n  const children = node.children;\r\n\r\n  // Check if this element has markdown attribute and markdown content\r\n  const hasMarkdownAttr = attributes.some(attr =>\r\n    t.isJSXAttribute(attr) && attr.name.name === 'markdown'\r\n  );\r\n\r\n  if (hasMarkdownAttr) {\r\n    // Check if child is a markdown state variable\r\n    if (children.length === 1 && t.isJSXExpressionContainer(children[0])) {\r\n      const expr = children[0].expression;\r\n      if (t.isIdentifier(expr)) {\r\n        const varName = expr.name;\r\n        // Check if this is a markdown state variable\r\n        if (component.stateTypes.get(varName) === 'markdown') {\r\n          // Return DivRawHtml with MarkdownHelper.ToHtml()\r\n          return `new DivRawHtml(MarkdownHelper.ToHtml(${varName}))`;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Detect if this needs runtime helpers (hybrid approach)\r\n  const needsRuntimeHelper = hasSpreadProps(attributes) ||\r\n                              hasDynamicChildren(children) ||\r\n                              hasComplexProps(attributes);\r\n\r\n  if (needsRuntimeHelper) {\r\n    // Lazy load to avoid circular dependency\r\n    const { generateRuntimeHelperCall } = require('./runtimeHelpers.cjs');\r\n    return generateRuntimeHelperCall(tagName, attributes, children, component, indent);\r\n  }\r\n\r\n  // Direct VNode construction (compile-time approach)\r\n  // Extract props and event handlers\r\n  const props = [];\r\n  const eventHandlers = [];\r\n  let dataMinimactAttrs = [];\r\n\r\n  for (const attr of attributes) {\r\n    if (t.isJSXAttribute(attr)) {\r\n      const name = attr.name.name;\r\n      const value = attr.value;\r\n\r\n      if (name.startsWith('on')) {\r\n        // Event handler\r\n        const handlerName = extractEventHandler(value, component);\r\n        eventHandlers.push(`[\"${name.toLowerCase()}\"] = \"${handlerName}\"`);\r\n      } else if (name.startsWith('data-minimact-')) {\r\n        // Keep minimact attributes as-is\r\n        const val = t.isStringLiteral(value) ? value.value : _generateCSharpExpression(value.expression);\r\n        dataMinimactAttrs.push(`[\"${name}\"] = \"${val}\"`);\r\n      } else {\r\n        // Regular prop\r\n        if (t.isStringLiteral(value)) {\r\n          // String literal - use as-is with quotes\r\n          props.push(`[\"${name}\"] = \"${escapeCSharpString(value.value)}\"`);\r\n        } else if (t.isJSXExpressionContainer(value)) {\r\n          // Expression - wrap in string interpolation\r\n          const expr = _generateCSharpExpression(value.expression);\r\n          props.push(`[\"${name}\"] = $\"{${expr}}\"`);\r\n        } else {\r\n          // Fallback\r\n          props.push(`[\"${name}\"] = \"\"`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Build props dictionary\r\n  const allProps = [...props, ...eventHandlers, ...dataMinimactAttrs];\r\n  const propsStr = allProps.length > 0\r\n    ? `new Dictionary<string, string> { ${allProps.join(', ')} }`\r\n    : 'new Dictionary<string, string>()';\r\n\r\n  // Generate children\r\n  const childrenCode = generateChildren(children, component, indent);\r\n\r\n  // Build VElement construction\r\n  if (childrenCode.length === 0) {\r\n    return `new VElement(\"${tagName}\", ${propsStr})`;\r\n  } else if (childrenCode.length === 1 && childrenCode[0].type === 'text') {\r\n    return `new VElement(\"${tagName}\", ${propsStr}, ${childrenCode[0].code})`;\r\n  } else {\r\n    // Wrap children appropriately for VNode array\r\n    const childrenArray = childrenCode.map(c => {\r\n      if (c.type === 'text') {\r\n        // Text already has quotes, wrap in VText\r\n        return `new VText(${c.code})`;\r\n      } else if (c.type === 'expression') {\r\n        // Expression needs string interpolation wrapper\r\n        return `new VText($\"{${c.code}}\")`;\r\n      } else {\r\n        // Element is already a VNode\r\n        return c.code;\r\n      }\r\n    }).join(',\\n' + indentStr + '    ');\r\n    return `new VElement(\"${tagName}\", ${propsStr}, new VNode[]\\n${indentStr}{\\n${indentStr}    ${childrenArray}\\n${indentStr}})`;\r\n  }\r\n}\r\n\r\n/**\r\n * Generate children\r\n */\r\nfunction generateChildren(children, component, indent) {\r\n  const result = [];\r\n\r\n  // Lazy load to avoid circular dependency\r\n  const { generateJSXExpression } = require('./expressions.cjs');\r\n\r\n  for (const child of children) {\r\n    if (t.isJSXText(child)) {\r\n      const text = child.value.trim();\r\n      if (text) {\r\n        result.push({ type: 'text', code: `\"${escapeCSharpString(text)}\"` });\r\n      }\r\n    } else if (t.isJSXElement(child)) {\r\n      result.push({ type: 'element', code: generateJSXElement(child, component, indent + 1) });\r\n    } else if (t.isJSXExpressionContainer(child)) {\r\n      result.push({ type: 'expression', code: generateJSXExpression(child.expression, component, indent) });\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = {\r\n  generateFragment,\r\n  generateJSXElement,\r\n  generateChildren\r\n};\r\n","/**\r\n * Runtime Helper Generators\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { escapeCSharpString } = require('../utils/helpers.cjs');\r\n// Lazy load to avoid circular dependencies with jsx.cjs and expressions.cjs\r\n\r\n/**\r\n * Generate runtime helper call for complex JSX patterns\r\n * Uses MinimactHelpers.createElement() for dynamic scenarios\r\n */\r\nfunction generateRuntimeHelperCall(tagName, attributes, children, component, indent) {\r\n  // Lazy load to avoid circular dependency\r\n  const { generateCSharpExpression } = require('./expressions.cjs');\r\n  const { generateJSXElement } = require('./jsx.cjs');\r\n\r\n  const indentStr = '    '.repeat(indent);\r\n\r\n  // Build props object\r\n  let propsCode = 'null';\r\n  const regularProps = [];\r\n  const spreadProps = [];\r\n\r\n  for (const attr of attributes) {\r\n    if (t.isJSXSpreadAttribute(attr)) {\r\n      // Spread operator: {...props}\r\n      spreadProps.push(generateCSharpExpression(attr.argument));\r\n    } else if (t.isJSXAttribute(attr)) {\r\n      const name = attr.name.name;\r\n      const value = attr.value;\r\n\r\n      // Convert attribute value to C# expression\r\n      let propValue;\r\n      if (t.isStringLiteral(value)) {\r\n        propValue = `\"${escapeCSharpString(value.value)}\"`;\r\n      } else if (t.isJSXExpressionContainer(value)) {\r\n        propValue = generateCSharpExpression(value.expression);\r\n      } else if (value === null) {\r\n        propValue = '\"true\"'; // Boolean attribute like <input disabled />\r\n      } else {\r\n        propValue = `\"${value}\"`;\r\n      }\r\n\r\n      regularProps.push(`${name} = ${propValue}`);\r\n    }\r\n  }\r\n\r\n  // Build props with potential spread merging\r\n  if (regularProps.length > 0 && spreadProps.length > 0) {\r\n    // Need to merge: ((object)new { prop1 = val1 }).MergeWith((object)spreadObj)\r\n    // Cast both to object to avoid dynamic dispatch issues\r\n    const regularPropsObj = `new { ${regularProps.join(', ')} }`;\r\n    propsCode = `((object)${regularPropsObj})`;\r\n    for (const spreadProp of spreadProps) {\r\n      propsCode = `${propsCode}.MergeWith((object)${spreadProp})`;\r\n    }\r\n  } else if (regularProps.length > 0) {\r\n    // Just regular props\r\n    propsCode = `new { ${regularProps.join(', ')} }`;\r\n  } else if (spreadProps.length > 0) {\r\n    // Just spread props\r\n    propsCode = spreadProps[0];\r\n    for (let i = 1; i < spreadProps.length; i++) {\r\n      propsCode = `((object)${propsCode}).MergeWith((object)${spreadProps[i]})`;\r\n    }\r\n  }\r\n\r\n  // Build children\r\n  const childrenArgs = [];\r\n  for (const child of children) {\r\n    if (t.isJSXText(child)) {\r\n      const text = child.value.trim();\r\n      if (text) {\r\n        childrenArgs.push(`\"${escapeCSharpString(text)}\"`);\r\n      }\r\n    } else if (t.isJSXElement(child)) {\r\n      childrenArgs.push(generateJSXElement(child, component, indent + 1));\r\n    } else if (t.isJSXExpressionContainer(child)) {\r\n      const expr = child.expression;\r\n\r\n      // Handle conditionals with JSX: {condition ? <A/> : <B/>}\r\n      if (t.isConditionalExpression(expr)) {\r\n        const { generateBooleanExpression } = require('./expressions.cjs');\r\n        const condition = generateBooleanExpression(expr.test);\r\n        const consequent = t.isJSXElement(expr.consequent) || t.isJSXFragment(expr.consequent)\r\n          ? generateJSXElement(expr.consequent, component, indent + 1)\r\n          : generateCSharpExpression(expr.consequent);\r\n        const alternate = t.isJSXElement(expr.alternate) || t.isJSXFragment(expr.alternate)\r\n          ? generateJSXElement(expr.alternate, component, indent + 1)\r\n          : generateCSharpExpression(expr.alternate);\r\n        childrenArgs.push(`(${condition}) ? ${consequent} : ${alternate}`);\r\n      }\r\n      // Handle logical expressions with JSX: {condition && <Element/>}\r\n      else if (t.isLogicalExpression(expr) && expr.operator === '&&') {\r\n        const { generateBooleanExpression } = require('./expressions.cjs');\r\n        const left = generateBooleanExpression(expr.left);\r\n        const right = t.isJSXElement(expr.right) || t.isJSXFragment(expr.right)\r\n          ? generateJSXElement(expr.right, component, indent + 1)\r\n          : generateCSharpExpression(expr.right);\r\n        childrenArgs.push(`(${left}) ? ${right} : null`);\r\n      }\r\n      // Handle .map() with JSX callback\r\n      else if (t.isCallExpression(expr) &&\r\n               t.isMemberExpression(expr.callee) &&\r\n               t.isIdentifier(expr.callee.property, { name: 'map' })) {\r\n        // Lazy load generateMapExpression\r\n        const { generateMapExpression } = require('./expressions.cjs');\r\n        childrenArgs.push(generateMapExpression(expr, component, indent));\r\n      }\r\n      // Dynamic children (e.g., items.Select(...))\r\n      else {\r\n        childrenArgs.push(generateCSharpExpression(child.expression));\r\n      }\r\n    }\r\n  }\r\n\r\n  // Generate the createElement call\r\n  if (childrenArgs.length === 0) {\r\n    return `MinimactHelpers.createElement(\"${tagName}\", ${propsCode})`;\r\n  } else if (childrenArgs.length === 1) {\r\n    return `MinimactHelpers.createElement(\"${tagName}\", ${propsCode}, ${childrenArgs[0]})`;\r\n  } else {\r\n    const childrenStr = childrenArgs.join(', ');\r\n    return `MinimactHelpers.createElement(\"${tagName}\", ${propsCode}, ${childrenStr})`;\r\n  }\r\n}\r\n\r\n/**\r\n * Force runtime helper generation for a JSX node (used in conditionals/logical expressions)\r\n */\r\nfunction generateRuntimeHelperForJSXNode(node, component, indent) {\r\n  // Lazy load to avoid circular dependency\r\n  const { generateCSharpExpression } = require('./expressions.cjs');\r\n\r\n  if (t.isJSXFragment(node)) {\r\n    // Handle fragments\r\n    const children = node.children;\r\n    const childrenArgs = [];\r\n    for (const child of children) {\r\n      if (t.isJSXText(child)) {\r\n        const text = child.value.trim();\r\n        if (text) {\r\n          childrenArgs.push(`\"${escapeCSharpString(text)}\"`);\r\n        }\r\n      } else if (t.isJSXElement(child)) {\r\n        childrenArgs.push(generateRuntimeHelperForJSXNode(child, component, indent + 1));\r\n      } else if (t.isJSXExpressionContainer(child)) {\r\n        childrenArgs.push(generateCSharpExpression(child.expression));\r\n      }\r\n    }\r\n    if (childrenArgs.length === 0) {\r\n      return 'MinimactHelpers.Fragment()';\r\n    }\r\n    return `MinimactHelpers.Fragment(${childrenArgs.join(', ')})`;\r\n  }\r\n\r\n  if (t.isJSXElement(node)) {\r\n    const tagName = node.openingElement.name.name;\r\n    const attributes = node.openingElement.attributes;\r\n    const children = node.children;\r\n    return generateRuntimeHelperCall(tagName, attributes, children, component, indent);\r\n  }\r\n\r\n  return 'null';\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = {\r\n  generateRuntimeHelperCall,\r\n  generateRuntimeHelperForJSXNode\r\n};\r\n","/**\r\n * Expression Generators\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { escapeCSharpString } = require('../utils/helpers.cjs');\r\nconst { analyzeDependencies } = require('../analyzers/dependencies.cjs');\r\nconst { classifyNode } = require('../analyzers/classification.cjs');\r\nconst { generateRuntimeHelperForJSXNode } = require('./runtimeHelpers.cjs');\r\nconst { generateJSXElement } = require('./jsx.cjs');\r\n\r\n// Module-level variable to store current component context\r\n// This allows useState setter detection without threading component through all calls\r\nlet currentComponent = null;\r\n\r\n/**\r\n * Generate expression for use in boolean context (conditionals, logical operators)\r\n * Wraps expressions in MObject for JavaScript truthiness semantics\r\n */\r\nfunction generateBooleanExpression(expr) {\r\n  const generated = generateCSharpExpression(expr);\r\n\r\n  // Check if this is a member expression on dynamic object (like user.isAdmin)\r\n  if (t.isMemberExpression(expr) && !expr.computed && t.isIdentifier(expr.object)) {\r\n    // Wrap dynamic member access in MObject for proper truthiness\r\n    return `new MObject(${generated})`;\r\n  }\r\n\r\n  // Check if this is a simple identifier that might be dynamic\r\n  if (t.isIdentifier(expr)) {\r\n    // Wrap in MObject for null/truthiness handling\r\n    return `new MObject(${generated})`;\r\n  }\r\n\r\n  // For other expressions (literals, etc.), use as-is\r\n  return generated;\r\n}\r\n\r\n/**\r\n * Generate JSX expression (e.g., {count}, {user.name})\r\n */\r\nfunction generateJSXExpression(expr, component, indent) {\r\n  // Analyze dependencies\r\n  const deps = analyzeDependencies(expr, component);\r\n  const zone = classifyNode(deps);\r\n\r\n  // For hybrid zones, we need to split\r\n  if (zone === 'hybrid') {\r\n    return generateHybridExpression(expr, component, deps, indent);\r\n  }\r\n\r\n  // Add zone attribute if needed\r\n  const zoneAttr = zone === 'client'\r\n    ? 'data-minimact-client-scope'\r\n    : zone === 'server'\r\n      ? 'data-minimact-server-scope'\r\n      : '';\r\n\r\n  // Handle special JSX expression types\r\n  if (t.isConditionalExpression(expr)) {\r\n    // Ternary with JSX: condition ? <A/> : <B/>\r\n    // Force runtime helpers for JSX in conditionals\r\n    const condition = generateBooleanExpression(expr.test);\r\n    const consequent = t.isJSXElement(expr.consequent) || t.isJSXFragment(expr.consequent)\r\n      ? generateRuntimeHelperForJSXNode(expr.consequent, component, indent)\r\n      : generateCSharpExpression(expr.consequent);\r\n    const alternate = t.isJSXElement(expr.alternate) || t.isJSXFragment(expr.alternate)\r\n      ? generateRuntimeHelperForJSXNode(expr.alternate, component, indent)\r\n      : generateCSharpExpression(expr.alternate);\r\n    return `(${condition}) ? ${consequent} : ${alternate}`;\r\n  }\r\n\r\n  if (t.isLogicalExpression(expr) && expr.operator === '&&') {\r\n    // Short-circuit with JSX: condition && <Element/>\r\n    // Force runtime helpers for JSX in logical expressions\r\n    const left = generateBooleanExpression(expr.left);\r\n    const right = t.isJSXElement(expr.right) || t.isJSXFragment(expr.right)\r\n      ? generateRuntimeHelperForJSXNode(expr.right, component, indent)\r\n      : generateCSharpExpression(expr.right);\r\n    // Use != null for truthy check (works for bool, object, int, etc.)\r\n    return `(${left}) ? ${right} : null`;\r\n  }\r\n\r\n  if (t.isCallExpression(expr) &&\r\n      t.isMemberExpression(expr.callee) &&\r\n      t.isIdentifier(expr.callee.property, { name: 'map' })) {\r\n    // Array.map() with JSX callback\r\n    return generateMapExpression(expr, component, indent);\r\n  }\r\n\r\n  // Generate C# expression\r\n  return generateCSharpExpression(expr);\r\n}\r\n\r\n/**\r\n * Generate conditional (ternary)\r\n */\r\nfunction generateConditional(node, component, indent) {\r\n  const indentStr = '    '.repeat(indent);\r\n  const condition = generateCSharpExpression(node.test);\r\n  const consequent = generateJSXElement(node.consequent, component, indent);\r\n  const alternate = generateJSXElement(node.alternate, component, indent);\r\n\r\n  return `${indentStr}return ${condition}\\n${indentStr}    ? ${consequent}\\n${indentStr}    : ${alternate};`;\r\n}\r\n\r\n/**\r\n * Generate short-circuit (&&)\r\n */\r\nfunction generateShortCircuit(node, component, indent) {\r\n  const indentStr = '    '.repeat(indent);\r\n  const condition = generateCSharpExpression(node.left);\r\n  const element = generateJSXElement(node.right, component, indent);\r\n\r\n  return `${indentStr}if (${condition})\\n${indentStr}{\\n${indentStr}    return ${element};\\n${indentStr}}\\n${indentStr}return new VText(\"\");`;\r\n}\r\n\r\n/**\r\n * Generate .map() expression\r\n */\r\nfunction generateMapExpression(node, component, indent) {\r\n  const indentStr = '    '.repeat(indent);\r\n  const array = node.callee.object;\r\n  const callback = node.arguments[0];\r\n\r\n  const arrayName = array.name || generateCSharpExpression(array);\r\n  const itemParam = callback.params[0].name;\r\n  const indexParam = callback.params[1] ? callback.params[1].name : null;\r\n  const body = callback.body;\r\n\r\n  const itemCode = t.isJSXElement(body)\r\n    ? generateJSXElement(body, component, indent + 1)\r\n    : generateJSXElement(body.body, component, indent + 1);\r\n\r\n  // C# Select supports (item, index) => ...\r\n  if (indexParam) {\r\n    return `${arrayName}.Select((${itemParam}, ${indexParam}) => ${itemCode}).ToArray()`;\r\n  } else {\r\n    return `${arrayName}.Select(${itemParam} => ${itemCode}).ToArray()`;\r\n  }\r\n}\r\n\r\n/**\r\n * Generate C# statement from JavaScript AST node\r\n */\r\nfunction generateCSharpStatement(node) {\r\n  if (!node) return '';\r\n\r\n  if (t.isExpressionStatement(node)) {\r\n    return generateCSharpExpression(node.expression) + ';';\r\n  }\r\n\r\n  if (t.isReturnStatement(node)) {\r\n    return `return ${generateCSharpExpression(node.argument)};`;\r\n  }\r\n\r\n  if (t.isVariableDeclaration(node)) {\r\n    const declarations = node.declarations.map(d => {\r\n      const name = d.id.name;\r\n      const value = generateCSharpExpression(d.init);\r\n      return `var ${name} = ${value};`;\r\n    }).join(' ');\r\n    return declarations;\r\n  }\r\n\r\n  // Fallback: try to convert as expression\r\n  return generateCSharpExpression(node) + ';';\r\n}\r\n\r\n/**\r\n * Generate C# expression from JS expression\r\n */\r\nfunction generateCSharpExpression(node) {\r\n  if (!node) return 'null';\r\n\r\n  if (t.isStringLiteral(node)) {\r\n    return `\"${escapeCSharpString(node.value)}\"`;\r\n  }\r\n\r\n  if (t.isNumericLiteral(node)) {\r\n    return String(node.value);\r\n  }\r\n\r\n  if (t.isBooleanLiteral(node)) {\r\n    return node.value ? 'true' : 'false';\r\n  }\r\n\r\n  if (t.isNullLiteral(node)) {\r\n    return 'null';\r\n  }\r\n\r\n  if (t.isIdentifier(node)) {\r\n    return node.name;\r\n  }\r\n\r\n  if (t.isMemberExpression(node)) {\r\n    const object = generateCSharpExpression(node.object);\r\n    const propertyName = t.isIdentifier(node.property) ? node.property.name : null;\r\n\r\n    // Handle JavaScript to C# API conversions\r\n    if (propertyName === 'length' && !node.computed) {\r\n      // array.length → array.Count\r\n      return `${object}.Count`;\r\n    }\r\n\r\n    const property = node.computed\r\n      ? `[${generateCSharpExpression(node.property)}]`\r\n      : `.${propertyName}`;\r\n    return `${object}${property}`;\r\n  }\r\n\r\n  if (t.isArrayExpression(node)) {\r\n    const elements = node.elements.map(e => generateCSharpExpression(e)).join(', ');\r\n    return `new List<object> { ${elements} }`;\r\n  }\r\n\r\n  if (t.isBinaryExpression(node)) {\r\n    const left = generateCSharpExpression(node.left);\r\n    const right = generateCSharpExpression(node.right);\r\n    // Convert JavaScript operators to C# operators\r\n    let operator = node.operator;\r\n    if (operator === '===') operator = '==';\r\n    if (operator === '!==') operator = '!=';\r\n    return `${left} ${operator} ${right}`;\r\n  }\r\n\r\n  if (t.isCallExpression(node)) {\r\n    // Handle console.log → Console.WriteLine\r\n    if (t.isMemberExpression(node.callee) &&\r\n        t.isIdentifier(node.callee.object, { name: 'console' }) &&\r\n        t.isIdentifier(node.callee.property, { name: 'log' })) {\r\n      const args = node.arguments.map(arg => generateCSharpExpression(arg)).join(' + ');\r\n      return `Console.WriteLine(${args})`;\r\n    }\r\n\r\n    // Handle .toFixed(n) → .ToString(\"Fn\")\r\n    if (t.isMemberExpression(node.callee) && t.isIdentifier(node.callee.property, { name: 'toFixed' })) {\r\n      const object = generateCSharpExpression(node.callee.object);\r\n      const decimals = node.arguments.length > 0 && t.isNumericLiteral(node.arguments[0])\r\n        ? node.arguments[0].value\r\n        : 2;\r\n      return `${object}.ToString(\"F${decimals}\")`;\r\n    }\r\n\r\n    // Handle useState/useClientState setters → SetState calls\r\n    if (t.isIdentifier(node.callee) && currentComponent) {\r\n      const setterName = node.callee.name;\r\n\r\n      // Check if this is a useState setter\r\n      const useState = [...(currentComponent.useState || []), ...(currentComponent.useClientState || [])]\r\n        .find(state => state.setter === setterName);\r\n\r\n      if (useState && node.arguments.length > 0) {\r\n        const newValue = generateCSharpExpression(node.arguments[0]);\r\n        return `SetState(nameof(${useState.name}), ${newValue})`;\r\n      }\r\n    }\r\n\r\n    // Generic function call\r\n    const callee = generateCSharpExpression(node.callee);\r\n    const args = node.arguments.map(arg => generateCSharpExpression(arg)).join(', ');\r\n    return `${callee}(${args})`;\r\n  }\r\n\r\n  if (t.isTemplateLiteral(node)) {\r\n    // Convert template literal to C# string interpolation\r\n    let result = '$\"';\r\n    for (let i = 0; i < node.quasis.length; i++) {\r\n      result += node.quasis[i].value.raw;\r\n      if (i < node.expressions.length) {\r\n        result += '{' + generateCSharpExpression(node.expressions[i]) + '}';\r\n      }\r\n    }\r\n    result += '\"';\r\n    return result;\r\n  }\r\n\r\n  if (t.isObjectExpression(node)) {\r\n    // Convert JS object literal to C# anonymous object or Dictionary\r\n    // Check if any key has hyphens (invalid for C# anonymous types)\r\n    const hasHyphenatedKeys = node.properties.some(prop => {\r\n      if (t.isObjectProperty(prop)) {\r\n        const key = t.isIdentifier(prop.key) ? prop.key.name : prop.key.value;\r\n        return typeof key === 'string' && key.includes('-');\r\n      }\r\n      return false;\r\n    });\r\n\r\n    const properties = node.properties.map(prop => {\r\n      if (t.isObjectProperty(prop)) {\r\n        const key = t.isIdentifier(prop.key) ? prop.key.name : prop.key.value;\r\n        const value = generateCSharpExpression(prop.value);\r\n\r\n        if (hasHyphenatedKeys) {\r\n          // Use Dictionary syntax with quoted keys\r\n          return `[\"${key}\"] = ${value}`;\r\n        } else {\r\n          // Use anonymous object syntax\r\n          return `${key} = ${value}`;\r\n        }\r\n      }\r\n      return '';\r\n    }).filter(p => p !== '');\r\n\r\n    if (properties.length === 0) return 'null';\r\n\r\n    if (hasHyphenatedKeys) {\r\n      return `new Dictionary<string, object> { ${properties.join(', ')} }`;\r\n    } else {\r\n      return `new { ${properties.join(', ')} }`;\r\n    }\r\n  }\r\n\r\n  return 'null';\r\n}\r\n\r\n/**\r\n * Generate attribute value\r\n */\r\nfunction generateAttributeValue(value) {\r\n  if (!value) return '\"\"';\r\n\r\n  if (t.isStringLiteral(value)) {\r\n    return `\"${escapeCSharpString(value.value)}\"`;\r\n  }\r\n\r\n  if (t.isJSXExpressionContainer(value)) {\r\n    return generateCSharpExpression(value.expression);\r\n  }\r\n\r\n  return '\"\"';\r\n}\r\n\r\n/**\r\n * Generate hybrid expression with smart span splitting\r\n */\r\nfunction generateHybridExpression(expr, component, deps, indent) {\r\n  // For now, return a simplified version\r\n  // TODO: Implement full AST splitting logic\r\n  return `new VText(${generateCSharpExpression(expr)})`;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Set the current component context for useState setter detection\r\n */\r\nfunction setCurrentComponent(component) {\r\n  currentComponent = component;\r\n}\r\n\r\nmodule.exports = {\r\n  generateAttributeValue,\r\n  generateCSharpExpression,\r\n  generateCSharpStatement,\r\n  generateMapExpression,\r\n  generateConditional,\r\n  generateShortCircuit,\r\n  generateHybridExpression,\r\n  generateJSXExpression,\r\n  generateBooleanExpression,\r\n  setCurrentComponent\r\n};\r\n","/**\r\n * Hook Extractors\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { generateCSharpExpression } = require('../generators/expressions.cjs');\r\nconst { inferType } = require('../types/typeConversion.cjs');\r\n\r\n/**\r\n * Extract hook calls (useState, useClientState, etc.)\r\n */\r\nfunction extractHook(path, component) {\r\n  const node = path.node;\r\n\r\n  if (!t.isIdentifier(node.callee)) return;\r\n\r\n  const hookName = node.callee.name;\r\n\r\n  switch (hookName) {\r\n    case 'useState':\r\n      extractUseState(path, component, 'useState');\r\n      break;\r\n    case 'useClientState':\r\n      extractUseState(path, component, 'useClientState');\r\n      break;\r\n    case 'useEffect':\r\n      extractUseEffect(path, component);\r\n      break;\r\n    case 'useRef':\r\n      extractUseRef(path, component);\r\n      break;\r\n    case 'useMarkdown':\r\n      extractUseMarkdown(path, component);\r\n      break;\r\n    case 'useTemplate':\r\n      extractUseTemplate(path, component);\r\n      break;\r\n    case 'useValidation':\r\n      extractUseValidation(path, component);\r\n      break;\r\n    case 'useModal':\r\n      extractUseModal(path, component);\r\n      break;\r\n    case 'useToggle':\r\n      extractUseToggle(path, component);\r\n      break;\r\n    case 'useDropdown':\r\n      extractUseDropdown(path, component);\r\n      break;\r\n    case 'usePub':\r\n      extractUsePub(path, component);\r\n      break;\r\n    case 'useSub':\r\n      extractUseSub(path, component);\r\n      break;\r\n    case 'useMicroTask':\r\n      extractUseMicroTask(path, component);\r\n      break;\r\n    case 'useMacroTask':\r\n      extractUseMacroTask(path, component);\r\n      break;\r\n    case 'useSignalR':\r\n      extractUseSignalR(path, component);\r\n      break;\r\n    case 'usePredictHint':\r\n      extractUsePredictHint(path, component);\r\n      break;\r\n  }\r\n}\r\n\r\n/**\r\n * Extract useState or useClientState\r\n */\r\nfunction extractUseState(path, component, hookType) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n  if (!t.isArrayPattern(parent.id)) return;\r\n\r\n  const [stateVar, setterVar] = parent.id.elements;\r\n  const initialValue = path.node.arguments[0];\r\n\r\n  const stateInfo = {\r\n    name: stateVar.name,\r\n    setter: setterVar.name,\r\n    initialValue: generateCSharpExpression(initialValue),\r\n    type: inferType(initialValue)\r\n  };\r\n\r\n  if (hookType === 'useState') {\r\n    component.useState.push(stateInfo);\r\n    component.stateTypes.set(stateVar.name, 'server');\r\n  } else {\r\n    component.useClientState.push(stateInfo);\r\n    component.stateTypes.set(stateVar.name, 'client');\r\n  }\r\n}\r\n\r\n/**\r\n * Extract useEffect\r\n */\r\nfunction extractUseEffect(path, component) {\r\n  const callback = path.node.arguments[0];\r\n  const dependencies = path.node.arguments[1];\r\n\r\n  component.useEffect.push({\r\n    body: callback,\r\n    dependencies: dependencies\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useRef\r\n */\r\nfunction extractUseRef(path, component) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const refName = parent.id.name;\r\n  const initialValue = path.node.arguments[0];\r\n\r\n  component.useRef.push({\r\n    name: refName,\r\n    initialValue: generateCSharpExpression(initialValue)\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useMarkdown\r\n */\r\nfunction extractUseMarkdown(path, component) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n  if (!t.isArrayPattern(parent.id)) return;\r\n\r\n  const [contentVar, setterVar] = parent.id.elements;\r\n  const initialValue = path.node.arguments[0];\r\n\r\n  component.useMarkdown.push({\r\n    name: contentVar.name,\r\n    setter: setterVar.name,\r\n    initialValue: generateCSharpExpression(initialValue)\r\n  });\r\n\r\n  // Track as markdown state type\r\n  component.stateTypes.set(contentVar.name, 'markdown');\r\n}\r\n\r\n/**\r\n * Extract useTemplate\r\n */\r\nfunction extractUseTemplate(path, component) {\r\n  const templateName = path.node.arguments[0];\r\n  const templateProps = path.node.arguments[1];\r\n\r\n  if (t.isStringLiteral(templateName)) {\r\n    component.useTemplate = {\r\n      name: templateName.value,\r\n      props: {}\r\n    };\r\n\r\n    // Extract template props if provided\r\n    if (templateProps && t.isObjectExpression(templateProps)) {\r\n      for (const prop of templateProps.properties) {\r\n        if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\r\n          const propName = prop.key.name;\r\n          let propValue = '';\r\n\r\n          if (t.isStringLiteral(prop.value)) {\r\n            propValue = prop.value.value;\r\n          } else if (t.isNumericLiteral(prop.value)) {\r\n            propValue = prop.value.value.toString();\r\n          } else if (t.isBooleanLiteral(prop.value)) {\r\n            propValue = prop.value.value.toString();\r\n          }\r\n\r\n          component.useTemplate.props[propName] = propValue;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Extract useValidation\r\n */\r\nfunction extractUseValidation(path, component) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const fieldName = parent.id.name;\r\n  const fieldKey = path.node.arguments[0];\r\n  const validationRules = path.node.arguments[1];\r\n\r\n  const validationInfo = {\r\n    name: fieldName,\r\n    fieldKey: t.isStringLiteral(fieldKey) ? fieldKey.value : fieldName,\r\n    rules: {}\r\n  };\r\n\r\n  // Extract validation rules from the object\r\n  if (validationRules && t.isObjectExpression(validationRules)) {\r\n    for (const prop of validationRules.properties) {\r\n      if (t.isObjectProperty(prop) && t.isIdentifier(prop.key)) {\r\n        const ruleName = prop.key.name;\r\n        let ruleValue = null;\r\n\r\n        if (t.isStringLiteral(prop.value)) {\r\n          ruleValue = prop.value.value;\r\n        } else if (t.isNumericLiteral(prop.value)) {\r\n          ruleValue = prop.value.value;\r\n        } else if (t.isBooleanLiteral(prop.value)) {\r\n          ruleValue = prop.value.value;\r\n        } else if (t.isRegExpLiteral(prop.value)) {\r\n          ruleValue = `/${prop.value.pattern}/${prop.value.flags || ''}`;\r\n        }\r\n\r\n        validationInfo.rules[ruleName] = ruleValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  component.useValidation.push(validationInfo);\r\n}\r\n\r\n/**\r\n * Extract useModal\r\n */\r\nfunction extractUseModal(path, component) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const modalName = parent.id.name;\r\n\r\n  component.useModal.push({\r\n    name: modalName\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useToggle\r\n */\r\nfunction extractUseToggle(path, component) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n  if (!t.isArrayPattern(parent.id)) return;\r\n\r\n  const [stateVar, toggleFunc] = parent.id.elements;\r\n  const initialValue = path.node.arguments[0];\r\n\r\n  const toggleInfo = {\r\n    name: stateVar.name,\r\n    toggleFunc: toggleFunc.name,\r\n    initialValue: generateCSharpExpression(initialValue)\r\n  };\r\n\r\n  component.useToggle.push(toggleInfo);\r\n}\r\n\r\n/**\r\n * Extract useDropdown\r\n */\r\nfunction extractUseDropdown(path, component) {\r\n  const parent = path.parent;\r\n\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const dropdownName = parent.id.name;\r\n  const routeArg = path.node.arguments[0];\r\n\r\n  let routeReference = null;\r\n\r\n  // Try to extract route reference (e.g., Routes.Api.Units.GetAll)\r\n  if (routeArg && t.isMemberExpression(routeArg)) {\r\n    routeReference = generateCSharpExpression(routeArg);\r\n  }\r\n\r\n  component.useDropdown.push({\r\n    name: dropdownName,\r\n    route: routeReference\r\n  });\r\n}\r\n\r\n/**\r\n * Extract usePub\r\n */\r\nfunction extractUsePub(path, component) {\r\n  const parent = path.parent;\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const pubName = parent.id.name;\r\n  const channel = path.node.arguments[0];\r\n\r\n  component.usePub = component.usePub || [];\r\n  component.usePub.push({\r\n    name: pubName,\r\n    channel: t.isStringLiteral(channel) ? channel.value : null\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useSub\r\n */\r\nfunction extractUseSub(path, component) {\r\n  const parent = path.parent;\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const subName = parent.id.name;\r\n  const channel = path.node.arguments[0];\r\n  const callback = path.node.arguments[1];\r\n\r\n  component.useSub = component.useSub || [];\r\n  component.useSub.push({\r\n    name: subName,\r\n    channel: t.isStringLiteral(channel) ? channel.value : null,\r\n    hasCallback: !!callback\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useMicroTask\r\n */\r\nfunction extractUseMicroTask(path, component) {\r\n  const callback = path.node.arguments[0];\r\n\r\n  component.useMicroTask = component.useMicroTask || [];\r\n  component.useMicroTask.push({\r\n    body: callback\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useMacroTask\r\n */\r\nfunction extractUseMacroTask(path, component) {\r\n  const callback = path.node.arguments[0];\r\n  const delay = path.node.arguments[1];\r\n\r\n  component.useMacroTask = component.useMacroTask || [];\r\n  component.useMacroTask.push({\r\n    body: callback,\r\n    delay: t.isNumericLiteral(delay) ? delay.value : 0\r\n  });\r\n}\r\n\r\n/**\r\n * Extract useSignalR\r\n */\r\nfunction extractUseSignalR(path, component) {\r\n  const parent = path.parent;\r\n  if (!t.isVariableDeclarator(parent)) return;\r\n\r\n  const signalRName = parent.id.name;\r\n  const hubUrl = path.node.arguments[0];\r\n  const onMessage = path.node.arguments[1];\r\n\r\n  component.useSignalR = component.useSignalR || [];\r\n  component.useSignalR.push({\r\n    name: signalRName,\r\n    hubUrl: t.isStringLiteral(hubUrl) ? hubUrl.value : null,\r\n    hasOnMessage: !!onMessage\r\n  });\r\n}\r\n\r\n/**\r\n * Extract usePredictHint\r\n */\r\nfunction extractUsePredictHint(path, component) {\r\n  const hintId = path.node.arguments[0];\r\n  const predictedState = path.node.arguments[1];\r\n\r\n  component.usePredictHint = component.usePredictHint || [];\r\n  component.usePredictHint.push({\r\n    hintId: t.isStringLiteral(hintId) ? hintId.value : null,\r\n    predictedState: predictedState\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  extractHook,\r\n  extractUseState,\r\n  extractUseEffect,\r\n  extractUseRef,\r\n  extractUseMarkdown,\r\n  extractUseTemplate,\r\n  extractUseValidation,\r\n  extractUseModal,\r\n  extractUseToggle,\r\n  extractUseDropdown,\r\n  extractUsePub,\r\n  extractUseSub,\r\n  extractUseMicroTask,\r\n  extractUseMacroTask,\r\n  extractUseSignalR,\r\n  extractUsePredictHint\r\n};","/**\r\n * Local Variables Extractor\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { generateCSharpExpression } = require('../generators/expressions.cjs');\r\nconst { tsTypeToCSharpType } = require('../types/typeConversion.cjs');\r\n\r\n/**\r\n * Extract local variables (const/let/var) from function body\r\n */\r\nfunction extractLocalVariables(path, component) {\r\n  const declarations = path.node.declarations;\r\n\r\n  for (const declarator of declarations) {\r\n    // Skip if it's a hook call (already handled)\r\n    if (t.isCallExpression(declarator.init)) {\r\n      const callee = declarator.init.callee;\r\n      if (t.isIdentifier(callee) && callee.name.startsWith('use')) {\r\n        continue; // Skip hook calls\r\n      }\r\n    }\r\n\r\n    // Check if this is an event handler (arrow function or function expression)\r\n    if (t.isIdentifier(declarator.id) && declarator.init) {\r\n      const varName = declarator.id.name;\r\n\r\n      // If it's an arrow function or function expression, treat it as an event handler\r\n      if (t.isArrowFunctionExpression(declarator.init) || t.isFunctionExpression(declarator.init)) {\r\n        component.eventHandlers.push({\r\n          name: varName,\r\n          body: declarator.init.body,\r\n          params: declarator.init.params\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Otherwise, treat as a regular local variable\r\n      const initValue = generateCSharpExpression(declarator.init);\r\n\r\n      // Try to infer type from TypeScript annotation or initial value\r\n      let varType = 'var'; // C# var for type inference\r\n      if (declarator.id.typeAnnotation?.typeAnnotation) {\r\n        varType = tsTypeToCSharpType(declarator.id.typeAnnotation.typeAnnotation);\r\n      }\r\n\r\n      component.localVariables.push({\r\n        name: varName,\r\n        type: varType,\r\n        initialValue: initValue\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  extractLocalVariables\r\n};\r\n","/**\r\n * Prop Type Inference\r\n * Infers C# types for props based on how they're used in the component\r\n */\r\n\r\nconst t = require('@babel/types');\r\n\r\n/**\r\n * Infer prop types from usage in the component body\r\n */\r\nfunction inferPropTypes(component, body) {\r\n  const propUsage = {};\r\n\r\n  // Initialize tracking for each prop\r\n  for (const prop of component.props) {\r\n    propUsage[prop.name] = {\r\n      usedAsBoolean: false,\r\n      usedAsNumber: false,\r\n      usedAsString: false,\r\n      usedAsArray: false,\r\n      usedAsObject: false,\r\n      hasArrayMethods: false,\r\n      hasNumberOperations: false\r\n    };\r\n  }\r\n\r\n  // Traverse the body to analyze prop usage\r\n  function analyzePropUsage(node) {\r\n    if (!node) return;\r\n\r\n    // Handle BlockStatement (function body)\r\n    if (t.isBlockStatement(node)) {\r\n      for (const statement of node.body) {\r\n        analyzePropUsage(statement);\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Handle VariableDeclaration\r\n    if (t.isVariableDeclaration(node)) {\r\n      for (const declarator of node.declarations) {\r\n        if (declarator.init) {\r\n          analyzePropUsage(declarator.init);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Handle ReturnStatement\r\n    if (t.isReturnStatement(node)) {\r\n      analyzePropUsage(node.argument);\r\n      return;\r\n    }\r\n\r\n    // Handle ExpressionStatement\r\n    if (t.isExpressionStatement(node)) {\r\n      analyzePropUsage(node.expression);\r\n      return;\r\n    }\r\n\r\n    // Check if prop is used in conditional context (implies boolean)\r\n    if (t.isConditionalExpression(node)) {\r\n      const testName = extractPropName(node.test);\r\n      if (testName && propUsage[testName]) {\r\n        propUsage[testName].usedAsBoolean = true;\r\n      }\r\n      analyzePropUsage(node.consequent);\r\n      analyzePropUsage(node.alternate);\r\n    }\r\n\r\n    // Check if prop is used in logical expression (implies boolean)\r\n    if (t.isLogicalExpression(node)) {\r\n      const leftName = extractPropName(node.left);\r\n      if (leftName && propUsage[leftName]) {\r\n        propUsage[leftName].usedAsBoolean = true;\r\n      }\r\n      analyzePropUsage(node.right);\r\n    }\r\n\r\n    // Check if prop is used with .map(), .filter(), etc (implies array)\r\n    if (t.isCallExpression(node) && t.isMemberExpression(node.callee)) {\r\n      const objectName = extractPropName(node.callee.object);\r\n      const methodName = t.isIdentifier(node.callee.property) ? node.callee.property.name : null;\r\n\r\n      if (objectName && propUsage[objectName]) {\r\n        if (methodName === 'map' || methodName === 'filter' || methodName === 'forEach' ||\r\n            methodName === 'find' || methodName === 'some' || methodName === 'every' ||\r\n            methodName === 'reduce' || methodName === 'sort' || methodName === 'slice') {\r\n          propUsage[objectName].usedAsArray = true;\r\n          propUsage[objectName].hasArrayMethods = true;\r\n        }\r\n      }\r\n\r\n      // Recurse into arguments\r\n      for (const arg of node.arguments) {\r\n        analyzePropUsage(arg);\r\n      }\r\n    }\r\n\r\n    // Check if prop is used in arithmetic operations (implies number)\r\n    if (t.isBinaryExpression(node)) {\r\n      if (['+', '-', '*', '/', '%', '>', '<', '>=', '<='].includes(node.operator)) {\r\n        const leftName = extractPropName(node.left);\r\n        const rightName = extractPropName(node.right);\r\n\r\n        if (leftName && propUsage[leftName]) {\r\n          propUsage[leftName].usedAsNumber = true;\r\n          propUsage[leftName].hasNumberOperations = true;\r\n        }\r\n        if (rightName && propUsage[rightName]) {\r\n          propUsage[rightName].usedAsNumber = true;\r\n          propUsage[rightName].hasNumberOperations = true;\r\n        }\r\n      }\r\n\r\n      analyzePropUsage(node.left);\r\n      analyzePropUsage(node.right);\r\n    }\r\n\r\n    // Check member access for .length (could be array or string)\r\n    if (t.isMemberExpression(node)) {\r\n      const objectName = extractPropName(node.object);\r\n      const propertyName = t.isIdentifier(node.property) ? node.property.name : null;\r\n\r\n      if (objectName && propUsage[objectName]) {\r\n        if (propertyName === 'length') {\r\n          // Could be array or string, mark both\r\n          propUsage[objectName].usedAsArray = true;\r\n          propUsage[objectName].usedAsString = true;\r\n        } else if (propertyName) {\r\n          // Accessing a property implies object\r\n          propUsage[objectName].usedAsObject = true;\r\n        }\r\n      }\r\n\r\n      analyzePropUsage(node.object);\r\n      if (node.computed) {\r\n        analyzePropUsage(node.property);\r\n      }\r\n    }\r\n\r\n    // Recurse into JSX elements\r\n    if (t.isJSXElement(node)) {\r\n      for (const child of node.children) {\r\n        analyzePropUsage(child);\r\n      }\r\n      for (const attr of node.openingElement.attributes) {\r\n        if (t.isJSXAttribute(attr) && t.isJSXExpressionContainer(attr.value)) {\r\n          analyzePropUsage(attr.value.expression);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (t.isJSXExpressionContainer(node)) {\r\n      analyzePropUsage(node.expression);\r\n    }\r\n\r\n    // Recurse into arrow functions\r\n    if (t.isArrowFunctionExpression(node)) {\r\n      analyzePropUsage(node.body);\r\n    }\r\n\r\n    // Recurse into arrays\r\n    if (Array.isArray(node)) {\r\n      for (const item of node) {\r\n        analyzePropUsage(item);\r\n      }\r\n    }\r\n  }\r\n\r\n  analyzePropUsage(body);\r\n\r\n  // Now infer types based on usage patterns\r\n  for (const prop of component.props) {\r\n    if (prop.type !== 'dynamic') {\r\n      // Already has explicit type from TypeScript, don't override\r\n      continue;\r\n    }\r\n\r\n    const usage = propUsage[prop.name];\r\n\r\n    if (usage.hasArrayMethods) {\r\n      // Definitely an array if array methods are called\r\n      prop.type = 'List<dynamic>';\r\n    } else if (usage.usedAsArray && !usage.hasNumberOperations) {\r\n      // Used as array (e.g., .length on array)\r\n      prop.type = 'List<dynamic>';\r\n    } else if (usage.usedAsBoolean && !usage.usedAsNumber && !usage.usedAsString && !usage.usedAsObject && !usage.usedAsArray) {\r\n      // Used only as boolean\r\n      prop.type = 'bool';\r\n    } else if (usage.hasNumberOperations && !usage.usedAsBoolean && !usage.usedAsArray) {\r\n      // Used in arithmetic operations\r\n      prop.type = 'double';\r\n    } else if (usage.usedAsObject && !usage.usedAsArray && !usage.usedAsBoolean) {\r\n      // Used as object with property access\r\n      prop.type = 'dynamic';\r\n    } else {\r\n      // Keep as dynamic for complex cases\r\n      prop.type = 'dynamic';\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Extract prop name from an expression\r\n */\r\nfunction extractPropName(node) {\r\n  if (t.isIdentifier(node)) {\r\n    return node.name;\r\n  }\r\n  if (t.isMemberExpression(node)) {\r\n    return extractPropName(node.object);\r\n  }\r\n  return null;\r\n}\r\n\r\nmodule.exports = {\r\n  inferPropTypes\r\n};\r\n","/**\r\n * Component Processor\r\n *\r\n * Main entry point for processing a component function/class.\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { getComponentName } = require('./utils/helpers.cjs');\r\nconst { tsTypeToCSharpType } = require('./types/typeConversion.cjs');\r\nconst { extractHook } = require('./extractors/hooks.cjs');\r\nconst { extractLocalVariables } = require('./extractors/localVariables.cjs');\r\nconst { inferPropTypes } = require('./analyzers/propTypeInference.cjs');\r\n\r\n/**\r\n * Process a component function\r\n */\r\nfunction processComponent(path, state) {\r\n  const componentName = getComponentName(path);\r\n\r\n  if (!componentName) return;\r\n  if (componentName[0] !== componentName[0].toUpperCase()) return; // Not a component\r\n\r\n  state.file.minimactComponents = state.file.minimactComponents || [];\r\n\r\n  const component = {\r\n    name: componentName,\r\n    props: [],\r\n    useState: [],\r\n    useClientState: [],\r\n    useEffect: [],\r\n    useRef: [],\r\n    useMarkdown: [],\r\n    useTemplate: null,\r\n    useValidation: [],\r\n    useModal: [],\r\n    useToggle: [],\r\n    useDropdown: [],\r\n    eventHandlers: [],\r\n    localVariables: [], // Local variables (const/let/var) in function body\r\n    renderBody: null,\r\n    stateTypes: new Map(), // Track which hook each state came from\r\n    dependencies: new Map() // Track dependencies per JSX node\r\n  };\r\n\r\n  // Extract props from function parameters\r\n  const params = path.node.params;\r\n  if (params.length > 0 && t.isObjectPattern(params[0])) {\r\n    // Destructured props: function Component({ prop1, prop2 })\r\n    // Check if there's a type annotation on the parameter\r\n    const paramTypeAnnotation = params[0].typeAnnotation?.typeAnnotation;\r\n\r\n    for (const property of params[0].properties) {\r\n      if (t.isObjectProperty(property) && t.isIdentifier(property.key)) {\r\n        let propType = 'dynamic';\r\n\r\n        // Try to extract type from TypeScript annotation\r\n        if (paramTypeAnnotation && t.isTSTypeLiteral(paramTypeAnnotation)) {\r\n          const propName = property.key.name;\r\n          const tsProperty = paramTypeAnnotation.members.find(\r\n            member => t.isTSPropertySignature(member) &&\r\n                     t.isIdentifier(member.key) &&\r\n                     member.key.name === propName\r\n          );\r\n          if (tsProperty && tsProperty.typeAnnotation) {\r\n            propType = tsTypeToCSharpType(tsProperty.typeAnnotation.typeAnnotation);\r\n          }\r\n        }\r\n\r\n        component.props.push({\r\n          name: property.key.name,\r\n          type: propType\r\n        });\r\n      }\r\n    }\r\n  } else if (params.length > 0 && t.isIdentifier(params[0])) {\r\n    // Props as single object: function Component(props)\r\n    // Use 'dynamic' to allow property access\r\n    component.props.push({\r\n      name: params[0].name,\r\n      type: 'dynamic'\r\n    });\r\n  }\r\n\r\n  // Find function body\r\n  const body = path.node.body.type === 'BlockStatement'\r\n    ? path.node.body\r\n    : t.blockStatement([t.returnStatement(path.node.body)]);\r\n\r\n  // Extract hooks and local variables\r\n  path.traverse({\r\n    CallExpression(hookPath) {\r\n      extractHook(hookPath, component);\r\n    },\r\n\r\n    VariableDeclaration(varPath) {\r\n      // Only extract local variables at the top level of the function body\r\n      if (varPath.getFunctionParent() === path && varPath.parent.type === 'BlockStatement') {\r\n        extractLocalVariables(varPath, component);\r\n      }\r\n    },\r\n\r\n    ReturnStatement(returnPath) {\r\n      if (returnPath.getFunctionParent() === path) {\r\n        // Deep clone the AST node to preserve it before we replace JSX with null\r\n        component.renderBody = t.cloneNode(returnPath.node.argument, true);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Infer prop types from usage BEFORE replacing JSX with null\r\n  // Pass the entire function body to analyze all usage (including JSX)\r\n  inferPropTypes(component, body);\r\n\r\n  // Now replace JSX to prevent @babel/preset-react from transforming it\r\n  path.traverse({\r\n    ReturnStatement(returnPath) {\r\n      if (returnPath.getFunctionParent() === path) {\r\n        returnPath.node.argument = t.nullLiteral();\r\n      }\r\n    }\r\n  });\r\n\r\n  state.file.minimactComponents.push(component);\r\n}\r\n\r\nmodule.exports = {\r\n  processComponent\r\n};\r\n","/**\r\n * Render Body Generator\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { generateJSXElement } = require('./jsx.cjs');\r\nconst { generateConditional, generateShortCircuit, generateMapExpression } = require('./expressions.cjs');\r\n\r\n/**\r\n * Generate C# code for render body\r\n */\r\nfunction generateRenderBody(node, component, indent) {\r\n  const indentStr = '    '.repeat(indent);\r\n\r\n  if (!node) {\r\n    return `${indentStr}return new VText(\"\");`;\r\n  }\r\n\r\n  // Handle different node types\r\n  if (t.isJSXElement(node) || t.isJSXFragment(node)) {\r\n    return `${indentStr}return ${generateJSXElement(node, component, indent)};`;\r\n  }\r\n\r\n  if (t.isConditionalExpression(node)) {\r\n    // Ternary: condition ? a : b\r\n    return generateConditional(node, component, indent);\r\n  }\r\n\r\n  if (t.isLogicalExpression(node) && node.operator === '&&') {\r\n    // Short-circuit: condition && <Element>\r\n    return generateShortCircuit(node, component, indent);\r\n  }\r\n\r\n  if (t.isCallExpression(node) && t.isMemberExpression(node.callee) && node.callee.property.name === 'map') {\r\n    // Array.map()\r\n    return generateMapExpression(node, component, indent);\r\n  }\r\n\r\n  // Fallback\r\n  return `${indentStr}return new VText(\"${node.type}\");`;\r\n}\r\n\r\nmodule.exports = {\r\n  generateRenderBody\r\n};\r\n","/**\r\n * Component Generator\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { generateRenderBody } = require('./renderBody.cjs');\r\nconst { generateCSharpExpression, generateCSharpStatement, setCurrentComponent } = require('./expressions.cjs');\r\n\r\n/**\r\n * Generate C# class for a component\r\n */\r\nfunction generateComponent(component) {\r\n  // Set the current component context for useState setter detection\r\n  setCurrentComponent(component);\r\n\r\n  const lines = [];\r\n\r\n  // Class declaration\r\n  lines.push('[Component]');\r\n\r\n  const baseClass = component.useTemplate\r\n    ? component.useTemplate.name\r\n    : 'MinimactComponent';\r\n\r\n  lines.push(`public partial class ${component.name} : ${baseClass}`);\r\n  lines.push('{');\r\n\r\n  // Template properties (from useTemplate)\r\n  if (component.useTemplate && component.useTemplate.props) {\r\n    for (const [propName, propValue] of Object.entries(component.useTemplate.props)) {\r\n      // Capitalize first letter for C# property name\r\n      const csharpPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\r\n      lines.push(`    public override string ${csharpPropName} => \"${propValue}\";`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // Prop fields (from function parameters)\r\n  for (const prop of component.props) {\r\n    lines.push(`    [Prop]`);\r\n    lines.push(`    public ${prop.type} ${prop.name} { get; set; }`);\r\n    lines.push('');\r\n  }\r\n\r\n  // State fields (useState)\r\n  for (const state of component.useState) {\r\n    lines.push(`    [State]`);\r\n    lines.push(`    private ${state.type} ${state.name} = ${state.initialValue};`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Ref fields (useRef)\r\n  for (const ref of component.useRef) {\r\n    lines.push(`    [Ref]`);\r\n    lines.push(`    private object ${ref.name} = ${ref.initialValue};`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Markdown fields (useMarkdown)\r\n  for (const md of component.useMarkdown) {\r\n    lines.push(`    [Markdown]`);\r\n    lines.push(`    [State]`);\r\n    lines.push(`    private string ${md.name} = ${md.initialValue};`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Validation fields (useValidation)\r\n  for (const validation of component.useValidation) {\r\n    lines.push(`    [Validation]`);\r\n    lines.push(`    private ValidationField ${validation.name} = new ValidationField`);\r\n    lines.push(`    {`);\r\n    lines.push(`        FieldKey = \"${validation.fieldKey}\",`);\r\n\r\n    // Add validation rules\r\n    if (validation.rules.required) {\r\n      lines.push(`        Required = ${validation.rules.required.toString().toLowerCase()},`);\r\n    }\r\n    if (validation.rules.minLength) {\r\n      lines.push(`        MinLength = ${validation.rules.minLength},`);\r\n    }\r\n    if (validation.rules.maxLength) {\r\n      lines.push(`        MaxLength = ${validation.rules.maxLength},`);\r\n    }\r\n    if (validation.rules.pattern) {\r\n      lines.push(`        Pattern = @\"${validation.rules.pattern}\",`);\r\n    }\r\n    if (validation.rules.message) {\r\n      lines.push(`        Message = \"${validation.rules.message}\"`);\r\n    }\r\n\r\n    lines.push(`    };`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Modal fields (useModal)\r\n  for (const modal of component.useModal) {\r\n    lines.push(`    private ModalState ${modal.name} = new ModalState();`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Toggle fields (useToggle)\r\n  for (const toggle of component.useToggle) {\r\n    lines.push(`    [State]`);\r\n    lines.push(`    private bool ${toggle.name} = ${toggle.initialValue};`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Dropdown fields (useDropdown)\r\n  for (const dropdown of component.useDropdown) {\r\n    lines.push(`    private DropdownState ${dropdown.name} = new DropdownState();`);\r\n    lines.push('');\r\n  }\r\n\r\n  // Pub/Sub fields (usePub)\r\n  if (component.usePub) {\r\n    for (const pub of component.usePub) {\r\n      const channelStr = pub.channel ? `\"${pub.channel}\"` : 'null';\r\n      lines.push(`    // usePub: ${pub.name}`);\r\n      lines.push(`    private string ${pub.name}_channel = ${channelStr};`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // Pub/Sub fields (useSub)\r\n  if (component.useSub) {\r\n    for (const sub of component.useSub) {\r\n      const channelStr = sub.channel ? `\"${sub.channel}\"` : 'null';\r\n      lines.push(`    // useSub: ${sub.name}`);\r\n      lines.push(`    private string ${sub.name}_channel = ${channelStr};`);\r\n      lines.push(`    private dynamic ${sub.name}_value = null;`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // Task scheduling fields (useMicroTask)\r\n  if (component.useMicroTask) {\r\n    for (let i = 0; i < component.useMicroTask.length; i++) {\r\n      lines.push(`    // useMicroTask ${i}`);\r\n      lines.push(`    private bool _microTaskScheduled_${i} = false;`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // Task scheduling fields (useMacroTask)\r\n  if (component.useMacroTask) {\r\n    for (let i = 0; i < component.useMacroTask.length; i++) {\r\n      const task = component.useMacroTask[i];\r\n      lines.push(`    // useMacroTask ${i} (delay: ${task.delay}ms)`);\r\n      lines.push(`    private bool _macroTaskScheduled_${i} = false;`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // SignalR fields (useSignalR)\r\n  if (component.useSignalR) {\r\n    for (const signalR of component.useSignalR) {\r\n      const hubUrlStr = signalR.hubUrl ? `\"${signalR.hubUrl}\"` : 'null';\r\n      lines.push(`    // useSignalR: ${signalR.name}`);\r\n      lines.push(`    private string ${signalR.name}_hubUrl = ${hubUrlStr};`);\r\n      lines.push(`    private bool ${signalR.name}_connected = false;`);\r\n      lines.push(`    private string ${signalR.name}_connectionId = null;`);\r\n      lines.push(`    private string ${signalR.name}_error = null;`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // Predict hint fields (usePredictHint)\r\n  if (component.usePredictHint) {\r\n    for (let i = 0; i < component.usePredictHint.length; i++) {\r\n      const hint = component.usePredictHint[i];\r\n      const hintIdStr = hint.hintId ? `\"${hint.hintId}\"` : `\"hint_${i}\"`;\r\n      lines.push(`    // usePredictHint: ${hintIdStr}`);\r\n      lines.push(`    private string _hintId_${i} = ${hintIdStr};`);\r\n      lines.push('');\r\n    }\r\n  }\r\n\r\n  // Render method (or RenderContent for templates)\r\n  const renderMethodName = component.useTemplate ? 'RenderContent' : 'Render';\r\n  lines.push(`    protected override VNode ${renderMethodName}()`);\r\n  lines.push('    {');\r\n\r\n  // Only add StateManager sync if NOT using a template (templates handle this themselves)\r\n  if (!component.useTemplate) {\r\n    lines.push('        StateManager.SyncMembersToState(this);');\r\n    lines.push('');\r\n  }\r\n\r\n  // Local variables\r\n  for (const localVar of component.localVariables) {\r\n    lines.push(`        ${localVar.type} ${localVar.name} = ${localVar.initialValue};`);\r\n  }\r\n  if (component.localVariables.length > 0) {\r\n    lines.push('');\r\n  }\r\n\r\n  if (component.renderBody) {\r\n    const renderCode = generateRenderBody(component.renderBody, component, 2);\r\n    lines.push(renderCode);\r\n  } else {\r\n    lines.push('        return new VText(\"\");');\r\n  }\r\n\r\n  lines.push('    }');\r\n\r\n  // Effect methods (useEffect)\r\n  let effectIndex = 0;\r\n  for (const effect of component.useEffect) {\r\n    lines.push('');\r\n\r\n    // Extract dependency names from array\r\n    const deps = [];\r\n    if (effect.dependencies && t.isArrayExpression(effect.dependencies)) {\r\n      for (const dep of effect.dependencies.elements) {\r\n        if (t.isIdentifier(dep)) {\r\n          deps.push(dep.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Generate [OnStateChanged] for each dependency\r\n    for (const dep of deps) {\r\n      lines.push(`    [OnStateChanged(\"${dep}\")]`);\r\n    }\r\n\r\n    lines.push(`    private void Effect_${effectIndex}()`);\r\n    lines.push('    {');\r\n\r\n    // Extract and convert effect body\r\n    if (effect.body && t.isArrowFunctionExpression(effect.body)) {\r\n      const body = effect.body.body;\r\n      if (t.isBlockStatement(body)) {\r\n        // Multi-statement effect\r\n        for (const stmt of body.body) {\r\n          lines.push(`        ${generateCSharpStatement(stmt)}`);\r\n        }\r\n      } else {\r\n        // Single expression effect\r\n        lines.push(`        ${generateCSharpExpression(body)};`);\r\n      }\r\n    }\r\n\r\n    lines.push('    }');\r\n    effectIndex++;\r\n  }\r\n\r\n  // Event handlers\r\n  for (const handler of component.eventHandlers) {\r\n    lines.push('');\r\n\r\n    // Generate parameter list\r\n    const params = handler.params || [];\r\n    const paramStr = params.length > 0\r\n      ? params.map(p => t.isIdentifier(p) ? `dynamic ${p.name}` : 'dynamic arg').join(', ')\r\n      : '';\r\n\r\n    lines.push(`    private void ${handler.name}(${paramStr})`);\r\n    lines.push('    {');\r\n\r\n    // Generate method body\r\n    if (handler.body) {\r\n      if (t.isBlockStatement(handler.body)) {\r\n        // Block statement: { ... }\r\n        for (const statement of handler.body.body) {\r\n          const csharpStmt = generateCSharpStatement(statement);\r\n          if (csharpStmt) {\r\n            lines.push(`        ${csharpStmt}`);\r\n          }\r\n        }\r\n      } else {\r\n        // Expression body: () => expression\r\n        const csharpExpr = generateCSharpExpression(handler.body);\r\n        lines.push(`        ${csharpExpr};`);\r\n      }\r\n    }\r\n\r\n    lines.push('    }');\r\n  }\r\n\r\n  // Toggle methods (useToggle)\r\n  for (const toggle of component.useToggle) {\r\n    lines.push('');\r\n    lines.push(`    private void ${toggle.toggleFunc}()`);\r\n    lines.push('    {');\r\n    lines.push(`        ${toggle.name} = !${toggle.name};`);\r\n    lines.push(`        SetState(\"${toggle.name}\", ${toggle.name});`);\r\n    lines.push('    }');\r\n  }\r\n\r\n  // Pub/Sub methods (usePub)\r\n  if (component.usePub) {\r\n    for (const pub of component.usePub) {\r\n      lines.push('');\r\n      lines.push(`    // Publish to ${pub.name}_channel`);\r\n      lines.push(`    private void ${pub.name}(dynamic value, PubSubOptions? options = null)`);\r\n      lines.push('    {');\r\n      lines.push(`        EventAggregator.Instance.Publish(${pub.name}_channel, value, options);`);\r\n      lines.push('    }');\r\n    }\r\n  }\r\n\r\n  // Pub/Sub methods (useSub)\r\n  if (component.useSub) {\r\n    for (const sub of component.useSub) {\r\n      lines.push('');\r\n      lines.push(`    // Subscribe to ${sub.name}_channel`);\r\n      lines.push(`    protected override void OnInitialized()`);\r\n      lines.push('    {');\r\n      lines.push(`        base.OnInitialized();`);\r\n      lines.push(`        `);\r\n      lines.push(`        // Subscribe to ${sub.name}_channel`);\r\n      lines.push(`        EventAggregator.Instance.Subscribe(${sub.name}_channel, (msg) => {`);\r\n      lines.push(`            ${sub.name}_value = msg.Value;`);\r\n      lines.push(`            SetState(\"${sub.name}_value\", ${sub.name}_value);`);\r\n      lines.push(`        });`);\r\n      lines.push('    }');\r\n    }\r\n  }\r\n\r\n  // SignalR methods (useSignalR)\r\n  if (component.useSignalR) {\r\n    for (const signalR of component.useSignalR) {\r\n      lines.push('');\r\n      lines.push(`    // SignalR send method for ${signalR.name}`);\r\n      lines.push(`    // Note: useSignalR is primarily client-side.`);\r\n      lines.push(`    // Server-side SignalR invocation can use HubContext directly if needed.`);\r\n      lines.push(`    private async Task ${signalR.name}_send(string methodName, params object[] args)`);\r\n      lines.push('    {');\r\n      lines.push(`        if (HubContext != null && ConnectionId != null)`);\r\n      lines.push(`        {`);\r\n      lines.push(`            // Send message to specific client connection`);\r\n      lines.push(`            await HubContext.Clients.Client(ConnectionId).SendAsync(methodName, args);`);\r\n      lines.push(`        }`);\r\n      lines.push('    }');\r\n    }\r\n  }\r\n\r\n  lines.push('}');\r\n\r\n  return lines;\r\n}\r\n\r\nmodule.exports = {\r\n  generateComponent\r\n};\r\n","/**\r\n * C# File Generator\r\n */\r\n\r\nconst { generateComponent } = require('./component.cjs');\r\n\r\n/**\r\n * Generate C# file from components\r\n */\r\nfunction generateCSharpFile(components, state) {\r\n  const lines = [];\r\n\r\n  // Usings\r\n  lines.push('using Minimact.AspNetCore.Core;');\r\n  lines.push('using Minimact.AspNetCore.Extensions;');\r\n  lines.push('using MinimactHelpers = Minimact.AspNetCore.Core.Minimact;');\r\n  lines.push('using System.Collections.Generic;');\r\n  lines.push('using System.Linq;');\r\n  lines.push('using System.Threading.Tasks;');\r\n  lines.push('');\r\n\r\n  // Namespace (extract from file path or use default)\r\n  const namespace = state.opts.namespace || 'Minimact.Components';\r\n  lines.push(`namespace ${namespace};`);\r\n  lines.push('');\r\n\r\n  // Generate each component\r\n  for (const component of components) {\r\n    lines.push(...generateComponent(component));\r\n    lines.push('');\r\n  }\r\n\r\n  return lines.join('\\n');\r\n}\r\n\r\n\r\nmodule.exports = {\r\n  generateCSharpFile\r\n};\r\n","/**\r\n * Minimact Babel Plugin - Complete Implementation\r\n *\r\n * Features:\r\n * - Dependency tracking for hybrid rendering\r\n * - Smart span splitting for mixed client/server state\r\n * - All hooks: useState, useEffect, useRef, useClientState, useMarkdown, useTemplate\r\n * - Conditional rendering (ternary, &&)\r\n * - List rendering (.map with key)\r\n * - Fragment support\r\n * - Props support\r\n * - TypeScript interface → C# class conversion\r\n */\r\n\r\nconst t = require('@babel/types');\r\nconst { traverse } = require('@babel/core');\r\n\r\n// Modular imports\r\nconst { processComponent } = require('./src/processComponent.cjs');\r\nconst { generateCSharpFile } = require('./src/generators/csharpFile.cjs');\r\n\r\nmodule.exports = function(babel) {\r\n  return {\r\n    name: 'minimact-full',\r\n\r\n    visitor: {\r\n      Program: {\r\n        exit(path, state) {\r\n          if (state.file.minimactComponents && state.file.minimactComponents.length > 0) {\r\n            const csharpCode = generateCSharpFile(state.file.minimactComponents, state);\r\n\r\n            state.file.metadata = state.file.metadata || {};\r\n            state.file.metadata.minimactCSharp = csharpCode;\r\n          }\r\n        }\r\n      },\r\n\r\n      FunctionDeclaration(path, state) {\r\n        processComponent(path, state);\r\n      },\r\n\r\n      ArrowFunctionExpression(path, state) {\r\n        if (path.parent.type === 'VariableDeclarator' || path.parent.type === 'ExportNamedDeclaration') {\r\n          processComponent(path, state);\r\n        }\r\n      },\r\n\r\n      FunctionExpression(path, state) {\r\n        if (path.parent.type === 'VariableDeclarator') {\r\n          processComponent(path, state);\r\n        }\r\n      }\r\n    }\r\n  };\r\n};"],"names":["getComponentName","t","tsTypeToCSharpType","inferType","require$$0","require$$1","require$$2","require$$3","require$$4","generateCSharpExpression","extractHook","extractLocalVariables","inferPropTypes","processComponent","generateRenderBody","generateComponent","generateCSharpFile"],"mappings":"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"}