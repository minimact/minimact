{"version":3,"file":"minimact-dynamic.esm.js","sources":["../src/dependency-tracker.ts","../src/value-updater.ts","../src/use-dynamic-state.ts","../src/index.ts"],"sourcesContent":["/**\r\n * minimact-dynamic - Dependency Tracker\r\n *\r\n * Automatically tracks which state properties a function accesses\r\n * using Proxy to intercept property reads.\r\n *\r\n * This enables smart re-evaluation: only re-run binding when\r\n * its specific dependencies change.\r\n */\r\n\r\nimport type { DependencyTrackingResult } from './types';\r\n\r\n/**\r\n * Track which state properties a function accesses\r\n *\r\n * @param state - State object\r\n * @param fn - Function to track\r\n * @returns Result and array of dependency paths\r\n *\r\n * @example\r\n * ```typescript\r\n * const { result, dependencies } = trackDependencies(\r\n *   { user: { isPremium: true }, product: { price: 29.99 } },\r\n *   (state) => state.user.isPremium ? state.product.price : 0\r\n * );\r\n * // dependencies = ['user.isPremium', 'product.price']\r\n * ```\r\n */\r\nexport function trackDependencies<T extends object>(\r\n  state: T,\r\n  fn: (state: T) => any\r\n): DependencyTrackingResult {\r\n  const dependencies = new Set<string>();\r\n\r\n  // Create proxy that tracks property access\r\n  const proxy = createTrackingProxy(state, '', dependencies);\r\n\r\n  // Execute function with tracking proxy\r\n  const result = fn(proxy);\r\n\r\n  return {\r\n    result,\r\n    dependencies: Array.from(dependencies)\r\n  };\r\n}\r\n\r\n/**\r\n * Create a Proxy that tracks property access\r\n *\r\n * This recursively wraps objects to track nested property access like:\r\n * state.user.isPremium → tracks 'user.isPremium'\r\n */\r\nfunction createTrackingProxy<T extends object>(\r\n  target: T,\r\n  path: string,\r\n  dependencies: Set<string>\r\n): T {\r\n  return new Proxy(target, {\r\n    get(obj, prop) {\r\n      // Build the full path (e.g., 'user.isPremium')\r\n      const propPath = path ? `${path}.${String(prop)}` : String(prop);\r\n\r\n      // Track this property access\r\n      dependencies.add(propPath);\r\n\r\n      const value = obj[prop as keyof T];\r\n\r\n      // If value is an object, return a proxy for nested tracking\r\n      if (value && typeof value === 'object' && !Array.isArray(value)) {\r\n        return createTrackingProxy(value, propPath, dependencies);\r\n      }\r\n\r\n      // Primitive value, return as-is\r\n      return value;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Check if any dependency path changed between prev and next state\r\n *\r\n * @param prevState - Previous state\r\n * @param nextState - Next state\r\n * @param dependencies - Array of dependency paths to check\r\n * @returns True if any dependency changed\r\n *\r\n * @example\r\n * ```typescript\r\n * const changed = hasPathChanged(\r\n *   { user: { isPremium: false } },\r\n *   { user: { isPremium: true } },\r\n *   ['user.isPremium']\r\n * );\r\n * // changed = true\r\n * ```\r\n */\r\nexport function hasPathChanged(\r\n  prevState: any,\r\n  nextState: any,\r\n  dependencies: string[]\r\n): boolean {\r\n  return dependencies.some(path => {\r\n    const prevValue = resolvePath(path, prevState);\r\n    const nextValue = resolvePath(path, nextState);\r\n\r\n    // Use strict equality for primitives\r\n    return prevValue !== nextValue;\r\n  });\r\n}\r\n\r\n/**\r\n * Resolve a dot-notation path to a value\r\n *\r\n * @param path - Dot-notation path (e.g., 'user.isPremium')\r\n * @param obj - Object to resolve from\r\n * @returns Value at path\r\n *\r\n * @example\r\n * ```typescript\r\n * const value = resolvePath('user.isPremium', { user: { isPremium: true } });\r\n * // value = true\r\n * ```\r\n */\r\nfunction resolvePath(path: string, obj: any): any {\r\n  return path.split('.').reduce((acc, part) => acc?.[part], obj);\r\n}\r\n\r\n/**\r\n * Shallow equality check for objects\r\n * Used for memoization cache\r\n */\r\nexport function shallowEqual(objA: any, objB: any): boolean {\r\n  if (objA === objB) return true;\r\n\r\n  if (\r\n    typeof objA !== 'object' ||\r\n    objA === null ||\r\n    typeof objB !== 'object' ||\r\n    objB === null\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  const keysA = Object.keys(objA);\r\n  const keysB = Object.keys(objB);\r\n\r\n  if (keysA.length !== keysB.length) return false;\r\n\r\n  for (const key of keysA) {\r\n    if (objA[key] !== objB[key]) return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n","/**\r\n * minimact-dynamic - Value Updater\r\n *\r\n * Updates DOM element values directly.\r\n * NO VDOM. NO RECONCILIATION.\r\n * Just: el.textContent = value\r\n *\r\n * This is the core of MINIMACT's performance advantage.\r\n */\r\n\r\n/**\r\n * Update DOM element value directly\r\n * Target: < 1ms per update\r\n */\r\nexport class ValueUpdater {\r\n  /**\r\n   * Update text content for all elements matching selector\r\n   *\r\n   * @param selector - CSS selector\r\n   * @param value - New value\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * updater.updateValue('.price', '$19.99');\r\n   * // → Direct update: el.textContent = '$19.99'\r\n   * ```\r\n   */\r\n  updateValue(selector: string, value: any): void {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    if (elements.length === 0) {\r\n      console.warn(`[minimact-dynamic] No elements found for selector: ${selector}`);\r\n      return;\r\n    }\r\n\r\n    const stringValue = String(value);\r\n\r\n    elements.forEach(element => {\r\n      // Direct DOM update - MINIMAL\r\n      // No VDOM, no reconciliation, just set the value\r\n      element.textContent = stringValue;\r\n    });\r\n\r\n    if (elements.length > 0) {\r\n      console.log(\r\n        `[minimact-dynamic] Updated ${elements.length} element(s) ` +\r\n        `with selector '${selector}' to value: ${stringValue}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update attribute value\r\n   *\r\n   * @param selector - CSS selector\r\n   * @param attr - Attribute name\r\n   * @param value - New value\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * updater.updateAttribute('img', 'src', '/new-image.jpg');\r\n   * ```\r\n   */\r\n  updateAttribute(selector: string, attr: string, value: any): void {\r\n    const elements = document.querySelectorAll(selector);\r\n    const stringValue = String(value);\r\n\r\n    elements.forEach(element => {\r\n      element.setAttribute(attr, stringValue);\r\n    });\r\n\r\n    if (elements.length > 0) {\r\n      console.log(\r\n        `[minimact-dynamic] Updated attribute '${attr}' on ${elements.length} ` +\r\n        `element(s) with selector '${selector}' to: ${stringValue}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update style property\r\n   *\r\n   * @param selector - CSS selector\r\n   * @param prop - Style property name\r\n   * @param value - New value\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * updater.updateStyle('.progress', 'width', '75%');\r\n   * ```\r\n   */\r\n  updateStyle(selector: string, prop: string, value: any): void {\r\n    const elements = document.querySelectorAll(selector);\r\n    const stringValue = String(value);\r\n\r\n    elements.forEach(element => {\r\n      (element as HTMLElement).style[prop as any] = stringValue;\r\n    });\r\n\r\n    if (elements.length > 0) {\r\n      console.log(\r\n        `[minimact-dynamic] Updated style '${prop}' on ${elements.length} ` +\r\n        `element(s) with selector '${selector}' to: ${stringValue}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update class name\r\n   *\r\n   * @param selector - CSS selector\r\n   * @param value - New class string\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * updater.updateClass('.button', 'button active');\r\n   * ```\r\n   */\r\n  updateClass(selector: string, value: any): void {\r\n    const elements = document.querySelectorAll(selector);\r\n    const stringValue = String(value);\r\n\r\n    elements.forEach(element => {\r\n      element.className = stringValue;\r\n    });\r\n\r\n    if (elements.length > 0) {\r\n      console.log(\r\n        `[minimact-dynamic] Updated className on ${elements.length} ` +\r\n        `element(s) with selector '${selector}' to: ${stringValue}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update visibility (display: none vs display: block)\r\n   *\r\n   * @param selector - CSS selector\r\n   * @param visible - Whether element should be visible\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * updater.updateVisibility('.modal', true);\r\n   * ```\r\n   */\r\n  updateVisibility(selector: string, visible: boolean): void {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    elements.forEach(element => {\r\n      (element as HTMLElement).style.display = visible ? '' : 'none';\r\n    });\r\n\r\n    if (elements.length > 0) {\r\n      console.log(\r\n        `[minimact-dynamic] Updated visibility on ${elements.length} ` +\r\n        `element(s) with selector '${selector}' to: ${visible ? 'visible' : 'hidden'}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update element order (DOM CHOREOGRAPHY)\r\n   * Moves elements based on state, never destroys them\r\n   *\r\n   * @param containerSelector - Container selector\r\n   * @param childSelectors - Ordered array of child selectors\r\n   *\r\n   * @example\r\n   * ```typescript\r\n   * updater.updateOrder('.cards', ['#card-3', '#card-1', '#card-2']);\r\n   * // → Rearranges cards in container (smooth CSS transitions!)\r\n   * ```\r\n   */\r\n  updateOrder(containerSelector: string, childSelectors: string[]): void {\r\n    const container = document.querySelector(containerSelector);\r\n\r\n    if (!container) {\r\n      console.warn(`[minimact-dynamic] Container not found: ${containerSelector}`);\r\n      return;\r\n    }\r\n\r\n    // Collect child elements in new order\r\n    const orderedChildren: Element[] = [];\r\n\r\n    for (const selector of childSelectors) {\r\n      // Try to find child in current container first\r\n      let child = container.querySelector(selector);\r\n\r\n      // If not in container, search globally (for teleportation)\r\n      if (!child) {\r\n        child = document.querySelector(selector);\r\n      }\r\n\r\n      if (child) {\r\n        orderedChildren.push(child);\r\n      } else {\r\n        console.warn(`[minimact-dynamic] Child element not found: ${selector}`);\r\n      }\r\n    }\r\n\r\n    // Append in new order (this moves them if needed)\r\n    orderedChildren.forEach(child => {\r\n      container.appendChild(child);\r\n    });\r\n\r\n    console.log(\r\n      `[minimact-dynamic] Choreographed ${orderedChildren.length} element(s) ` +\r\n      `in container '${containerSelector}'`\r\n    );\r\n  }\r\n}\r\n","/**\r\n * minimact-dynamic - useDynamicState Hook\r\n *\r\n * The core hook that enables minimal dynamic value bindings.\r\n *\r\n * Philosophy: Structure ONCE. Bind SEPARATELY. Update DIRECTLY.\r\n */\r\n\r\nimport { useState, useCallback, useRef, useEffect } from 'react';\r\nimport type {\r\n  DynamicStateAPI,\r\n  DynamicBinding,\r\n  DynamicOrderBinding,\r\n  DynamicValueFunction,\r\n  DynamicOrderFunction\r\n} from './types';\r\nimport { trackDependencies, hasPathChanged } from './dependency-tracker';\r\nimport { ValueUpdater } from './value-updater';\r\n\r\n/**\r\n * Create a dynamic state manager with automatic dependency tracking\r\n *\r\n * @param initialState - Initial state object\r\n * @returns Dynamic state API\r\n *\r\n * @example\r\n * ```typescript\r\n * const dynamic = useDynamicState({\r\n *   user: { isPremium: false },\r\n *   product: { price: 29.99, factoryPrice: 19.99 }\r\n * });\r\n *\r\n * // Structure ONCE\r\n * <span className=\"price\"></span>\r\n *\r\n * // Bind SEPARATELY\r\n * dynamic('.price', (state) =>\r\n *   state.user.isPremium ? state.product.factoryPrice : state.product.price\r\n * );\r\n *\r\n * // Update state\r\n * dynamic.setState({ user: { isPremium: true } });\r\n * // → Direct DOM update: el.textContent = '$19.99' (< 1ms!)\r\n * ```\r\n */\r\nexport function useDynamicState<TState extends object = any>(\r\n  initialState: TState\r\n): DynamicStateAPI<TState> {\r\n  const [state, setState] = useState<TState>(initialState);\r\n  const prevStateRef = useRef<TState>(initialState);\r\n  const bindingsRef = useRef<Map<string, DynamicBinding<TState>>>(new Map());\r\n  const orderBindingsRef = useRef<Map<string, DynamicOrderBinding<TState>>>(new Map());\r\n  const updaterRef = useRef<ValueUpdater>(new ValueUpdater());\r\n  const isHydratedRef = useRef(false);\r\n\r\n  // HYDRATION: Read pre-rendered bindings from server\r\n  useEffect(() => {\r\n    if (!isHydratedRef.current) {\r\n      hydrateBindings();\r\n      isHydratedRef.current = true;\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Hydrate bindings from server-rendered HTML\r\n   * Server has already evaluated functions and rendered values\r\n   */\r\n  const hydrateBindings = () => {\r\n    const bindingElements = document.querySelectorAll('[data-minimact-binding]');\r\n\r\n    bindingElements.forEach(el => {\r\n      const metadataJson = el.getAttribute('data-minimact-binding');\r\n      if (!metadataJson) return;\r\n\r\n      try {\r\n        const metadata = JSON.parse(metadataJson);\r\n        console.log(`[minimact-dynamic] Hydrated binding: ${metadata.selector}`);\r\n\r\n        // Remove metadata attribute (cleanup)\r\n        el.removeAttribute('data-minimact-binding');\r\n      } catch (error) {\r\n        console.error('[minimact-dynamic] Failed to parse binding metadata:', error);\r\n      }\r\n    });\r\n\r\n    if (bindingElements.length > 0) {\r\n      console.log(`[minimact-dynamic] Hydrated ${bindingElements.length} bindings in < 5ms`);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Register a dynamic value binding\r\n   */\r\n  const registerBinding = useCallback(\r\n    (selector: string, fn: DynamicValueFunction<TState>) => {\r\n      // Track dependencies by executing function once with tracking proxy\r\n      const { result: initialValue, dependencies } = trackDependencies(state, fn);\r\n\r\n      const bindingId = `binding_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      // Store binding\r\n      bindingsRef.current.set(selector, {\r\n        bindingId,\r\n        selector,\r\n        fn,\r\n        dependencies,\r\n        currentValue: initialValue\r\n      });\r\n\r\n      // Render initial value to DOM\r\n      updaterRef.current.updateValue(selector, initialValue);\r\n\r\n      console.log(\r\n        `[minimact-dynamic] Registered binding '${selector}' with dependencies:`,\r\n        dependencies\r\n      );\r\n    },\r\n    [state]\r\n  );\r\n\r\n  /**\r\n   * Register element order binding (DOM CHOREOGRAPHY)\r\n   */\r\n  const registerOrderBinding = useCallback(\r\n    (containerSelector: string, fn: DynamicOrderFunction<TState>) => {\r\n      // Track dependencies\r\n      const { result: initialOrder, dependencies } = trackDependencies(state, fn);\r\n\r\n      const bindingId = `order_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n      // Store binding\r\n      orderBindingsRef.current.set(containerSelector, {\r\n        bindingId,\r\n        containerSelector,\r\n        fn,\r\n        dependencies,\r\n        currentOrder: initialOrder\r\n      });\r\n\r\n      // Apply initial order\r\n      updaterRef.current.updateOrder(containerSelector, initialOrder);\r\n\r\n      console.log(\r\n        `[minimact-dynamic] Registered order binding '${containerSelector}' ` +\r\n        `with dependencies:`,\r\n        dependencies\r\n      );\r\n    },\r\n    [state]\r\n  );\r\n\r\n  /**\r\n   * Re-evaluate bindings when state changes\r\n   * Only re-evaluates bindings whose dependencies changed\r\n   */\r\n  useEffect(() => {\r\n    const prevState = prevStateRef.current;\r\n\r\n    // Update value bindings\r\n    bindingsRef.current.forEach(binding => {\r\n      // Check if any dependencies changed\r\n      const shouldUpdate = hasPathChanged(prevState, state, binding.dependencies);\r\n\r\n      if (shouldUpdate) {\r\n        const startTime = performance.now();\r\n\r\n        // Re-evaluate function with new state\r\n        const newValue = binding.fn(state);\r\n\r\n        // Update DOM directly - MINIMAL (< 1ms target)\r\n        updaterRef.current.updateValue(binding.selector, newValue);\r\n\r\n        // Update current value\r\n        binding.currentValue = newValue;\r\n\r\n        const latency = performance.now() - startTime;\r\n        console.log(\r\n          `[minimact-dynamic] Updated binding '${binding.selector}' ` +\r\n          `to: ${newValue} in ${latency.toFixed(2)}ms`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Update order bindings (DOM Choreography)\r\n    orderBindingsRef.current.forEach(binding => {\r\n      const shouldUpdate = hasPathChanged(prevState, state, binding.dependencies);\r\n\r\n      if (shouldUpdate) {\r\n        const startTime = performance.now();\r\n\r\n        // Re-evaluate order function\r\n        const newOrder = binding.fn(state);\r\n\r\n        // Update DOM order - Elements move, never destroyed!\r\n        updaterRef.current.updateOrder(binding.containerSelector, newOrder);\r\n\r\n        // Update current order\r\n        binding.currentOrder = newOrder;\r\n\r\n        const latency = performance.now() - startTime;\r\n        console.log(\r\n          `[minimact-dynamic] Choreographed '${binding.containerSelector}' ` +\r\n          `in ${latency.toFixed(2)}ms`\r\n        );\r\n      }\r\n    });\r\n\r\n    // Store current state for next comparison\r\n    prevStateRef.current = state;\r\n  }, [state]);\r\n\r\n  /**\r\n   * Update state\r\n   */\r\n  const updateState = useCallback((updaterOrPartial: any) => {\r\n    if (typeof updaterOrPartial === 'function') {\r\n      setState(updaterOrPartial);\r\n    } else {\r\n      setState(prev => ({ ...prev, ...updaterOrPartial }));\r\n    }\r\n  }, []);\r\n\r\n  // Build API object\r\n  const api: any = registerBinding;\r\n\r\n  // .order() for DOM choreography\r\n  api.order = registerOrderBinding;\r\n\r\n  // .attr() for attribute bindings\r\n  api.attr = (selector: string, attribute: string, fn: DynamicValueFunction<TState>) => {\r\n    const { result: initialValue, dependencies } = trackDependencies(state, fn);\r\n\r\n    const binding = {\r\n      bindingId: `attr_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      selector,\r\n      fn,\r\n      dependencies,\r\n      currentValue: initialValue\r\n    };\r\n\r\n    bindingsRef.current.set(`${selector}[attr:${attribute}]`, binding);\r\n    updaterRef.current.updateAttribute(selector, attribute, initialValue);\r\n\r\n    console.log(`[minimact-dynamic] Registered attribute binding '${selector}[${attribute}]'`);\r\n  };\r\n\r\n  // .class() for class bindings\r\n  api.class = (selector: string, fn: DynamicValueFunction<TState>) => {\r\n    const { result: initialValue, dependencies } = trackDependencies(state, fn);\r\n\r\n    const binding = {\r\n      bindingId: `class_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      selector,\r\n      fn,\r\n      dependencies,\r\n      currentValue: initialValue\r\n    };\r\n\r\n    bindingsRef.current.set(`${selector}[class]`, binding);\r\n    updaterRef.current.updateClass(selector, initialValue);\r\n\r\n    console.log(`[minimact-dynamic] Registered class binding '${selector}'`);\r\n  };\r\n\r\n  // .style() for style bindings\r\n  api.style = (selector: string, property: string, fn: DynamicValueFunction<TState>) => {\r\n    const { result: initialValue, dependencies } = trackDependencies(state, fn);\r\n\r\n    const binding = {\r\n      bindingId: `style_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      selector,\r\n      fn,\r\n      dependencies,\r\n      currentValue: initialValue\r\n    };\r\n\r\n    bindingsRef.current.set(`${selector}[style:${property}]`, binding);\r\n    updaterRef.current.updateStyle(selector, property, initialValue);\r\n\r\n    console.log(`[minimact-dynamic] Registered style binding '${selector}[${property}]'`);\r\n  };\r\n\r\n  // .show() for visibility bindings\r\n  api.show = (selector: string, fn: (state: TState) => boolean) => {\r\n    const { result: initialValue, dependencies } = trackDependencies(state, fn);\r\n\r\n    const binding = {\r\n      bindingId: `show_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      selector,\r\n      fn,\r\n      dependencies,\r\n      currentValue: initialValue\r\n    };\r\n\r\n    bindingsRef.current.set(`${selector}[show]`, binding);\r\n    updaterRef.current.updateVisibility(selector, initialValue);\r\n\r\n    console.log(`[minimact-dynamic] Registered visibility binding '${selector}'`);\r\n  };\r\n\r\n  // State management\r\n  api.getState = () => state;\r\n  api.setState = updateState;\r\n  api.clear = () => {\r\n    bindingsRef.current.clear();\r\n    orderBindingsRef.current.clear();\r\n  };\r\n  api.remove = (selector: string) => bindingsRef.current.delete(selector);\r\n\r\n  return api;\r\n}\r\n","/**\r\n * minimact-dynamic\r\n *\r\n * Minimal dynamic value bindings for Minimact.\r\n * Separate structure from content. Define DOM once, bind values separately.\r\n *\r\n * Philosophy: Structure ONCE. Bind SEPARATELY. Update DIRECTLY.\r\n *\r\n * @example\r\n * ```typescript\r\n * import { useDynamicState } from 'minimact-dynamic';\r\n *\r\n * const dynamic = useDynamicState({\r\n *   user: { isPremium: false },\r\n *   product: { price: 29.99 }\r\n * });\r\n *\r\n * // Structure ONCE\r\n * <span className=\"price\"></span>\r\n *\r\n * // Bind SEPARATELY\r\n * dynamic('.price', (state) =>\r\n *   state.user.isPremium ? `$${state.product.price * 0.8}` : `$${state.product.price}`\r\n * );\r\n * ```\r\n */\r\n\r\nexport { useDynamicState } from './use-dynamic-state';\r\nexport { ValueUpdater } from './value-updater';\r\nexport { trackDependencies, hasPathChanged, shallowEqual } from './dependency-tracker';\r\n\r\nexport type {\r\n  DynamicStateAPI,\r\n  DynamicBinding,\r\n  DynamicOrderBinding,\r\n  DynamicValueFunction,\r\n  DynamicOrderFunction,\r\n  BindingMetadata,\r\n  DependencyTrackingResult\r\n} from './types';\r\n\r\nexport const VERSION = '0.1.0';\r\nexport const PHILOSOPHY = 'Structure ONCE. Bind SEPARATELY. Update DIRECTLY.';\r\n"],"names":[],"mappings":"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"}